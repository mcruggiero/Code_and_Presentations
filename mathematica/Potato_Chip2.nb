(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    289497,       5678]
NotebookOptionsPosition[    288121,       5626]
NotebookOutlinePosition[    288480,       5642]
CellTagsIndexPosition[    288437,       5639]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"BigData", " ", "=", " ", 
   RowBox[{"Import", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
        "\"\<Chip1.ply\>\""}], "}"}], "]"}], ",", "\"\<VertexData\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "BigData", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.686074992708253*^9, 3.686075054969846*^9}, {
   3.6860750891249857`*^9, 3.686075096972876*^9}, {3.686075141826869*^9, 
   3.686075148131051*^9}, {3.686075182275291*^9, 3.686075199770349*^9}, {
   3.68607527348278*^9, 3.686075312797105*^9}, 3.686075347202429*^9, {
   3.686145228664751*^9, 3.686145229702627*^9}, {3.686146774266307*^9, 
   3.686146781704093*^9}, {3.686147516475553*^9, 3.6861475344755907`*^9}, {
   3.686147587869054*^9, 3.6861475882028913`*^9}, {3.6862238623863573`*^9, 
   3.686223869269444*^9}}],

Cell[BoxData["671123"], "Output",
 CellChangeTimes->{
  3.686145268753765*^9, 3.6861455958744164`*^9, 3.686145717929328*^9, 
   3.686146258004195*^9, {3.686146782496656*^9, 3.6861468074953537`*^9}, 
   3.686147553345806*^9, 3.686147607553794*^9, 3.6861563890594063`*^9, 
   3.686168252332162*^9, 3.6862238191637497`*^9, {3.686223866732864*^9, 
   3.686223869758918*^9}, 3.686223915260418*^9, 3.6862384644523993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"BigData", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "1"}], ";;", "25"}], "]"}], "]"}], "]"}], ",", ".01"}], 
    "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "takes", " ", "every", " ", "other", " ", "50", " ", "pts"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Length", "[", "data", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataDim", "[", "1", "]"}], " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataDim", "[", "2", "]"}], "=", "  ", 
   RowBox[{"Sort", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataDim", "[", "3", "]"}], " ", "=", "  ", 
   RowBox[{"Sort", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"dataDim", "[", "i", "]"}], "]"}], ",", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"dataDim", "[", "i", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.686075361226337*^9, 3.686075367346593*^9}, {
   3.686075405410017*^9, 3.6860754203517036`*^9}, 3.6860784375454273`*^9, {
   3.686079405419388*^9, 3.686079405678041*^9}, 3.686080274528734*^9, {
   3.6860807252267933`*^9, 3.686080725358876*^9}, {3.6860825732633457`*^9, 
   3.686082573761259*^9}, {3.686145761510208*^9, 3.686145761818657*^9}, {
   3.6861462188192596`*^9, 3.686146234178937*^9}, {3.686146728144127*^9, 
   3.686146736220945*^9}, {3.686146785123941*^9, 3.686146785483585*^9}, {
   3.686146818082307*^9, 3.6861468209205303`*^9}, {3.686146907536641*^9, 
   3.686146914045721*^9}, {3.6861469674220133`*^9, 3.686147138465802*^9}, {
   3.686147279542225*^9, 3.686147313398265*^9}, {3.6861473601201687`*^9, 
   3.686147372270398*^9}, {3.686147469037408*^9, 3.6861474812111263`*^9}, {
   3.686147538731386*^9, 3.686147539056718*^9}, {3.686147593619421*^9, 
   3.686147594722083*^9}, {3.6861476520767117`*^9, 3.686147730716592*^9}, {
   3.686153756302937*^9, 3.686153757133171*^9}, {3.68616593581676*^9, 
   3.686165964476615*^9}, {3.686167224690405*^9, 3.686167225535121*^9}, 
   3.686168137685161*^9, {3.686223959830763*^9, 3.686223983066722*^9}, {
   3.6862293488302*^9, 3.686229421988989*^9}, {3.686229452852275*^9, 
   3.686229500639771*^9}, {3.68622956320483*^9, 3.6862295645959587`*^9}, {
   3.686241048437998*^9, 3.686241145140155*^9}, {3.686241183091289*^9, 
   3.686241228928527*^9}, {3.68624130906187*^9, 3.68624131354285*^9}, {
   3.686241405171694*^9, 3.686241406328405*^9}}],

Cell[BoxData["4396"], "Output",
 CellChangeTimes->{
  3.686080275452485*^9, 3.686080758138633*^9, 3.68608258298836*^9, 
   3.6860843225923033`*^9, 3.686145118074231*^9, 3.686145599245158*^9, 
   3.686145662497465*^9, 3.6861457633737698`*^9, 3.686146262438779*^9, 
   3.686146738666025*^9, {3.686146810356679*^9, 3.686146821454886*^9}, 
   3.686146914704607*^9, 3.6861470389659863`*^9, 3.6861470701309443`*^9, {
   3.686147101848672*^9, 3.686147105299377*^9}, 3.686147313950205*^9, 
   3.686147373281951*^9, 3.6861474839914494`*^9, 3.686147569969137*^9, 
   3.686147731500452*^9, 3.686153760273909*^9, {3.6861563990360947`*^9, 
   3.686156406286474*^9}, {3.68616593833284*^9, 3.686165965604089*^9}, 
   3.686167226296946*^9, 3.686168138642383*^9, 3.686229424979061*^9, {
   3.686229457964603*^9, 3.686229501592905*^9}, 3.686229566514564*^9, 
   3.6862384872001657`*^9, 3.6862410534050694`*^9, 3.6862410875666733`*^9, {
   3.6862411247414303`*^9, 3.686241145988873*^9}, {3.6862411851529837`*^9, 
   3.686241229605174*^9}, 3.6862413144269047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "64"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "13"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.686080275452485*^9, 3.686080758138633*^9, 3.68608258298836*^9, 
   3.6860843225923033`*^9, 3.686145118074231*^9, 3.686145599245158*^9, 
   3.686145662497465*^9, 3.6861457633737698`*^9, 3.686146262438779*^9, 
   3.686146738666025*^9, {3.686146810356679*^9, 3.686146821454886*^9}, 
   3.686146914704607*^9, 3.6861470389659863`*^9, 3.6861470701309443`*^9, {
   3.686147101848672*^9, 3.686147105299377*^9}, 3.686147313950205*^9, 
   3.686147373281951*^9, 3.6861474839914494`*^9, 3.686147569969137*^9, 
   3.686147731500452*^9, 3.686153760273909*^9, {3.6861563990360947`*^9, 
   3.686156406286474*^9}, {3.68616593833284*^9, 3.686165965604089*^9}, 
   3.686167226296946*^9, 3.686168138642383*^9, 3.686229424979061*^9, {
   3.686229457964603*^9, 3.686229501592905*^9}, 3.686229566514564*^9, 
   3.6862384872001657`*^9, 3.6862410534050694`*^9, 3.6862410875666733`*^9, {
   3.6862411247414303`*^9, 3.686241145988873*^9}, {3.6862411851529837`*^9, 
   3.686241229605174*^9}, 3.6862413144372396`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dataDim", "[", "1", "]"}], ",", " ", 
      RowBox[{"dataDim", "[", "2", "]"}], ",", " ", 
      RowBox[{"dataDim", "[", "3", "]"}]}], "}"}], ",", " ", 
    RowBox[{"ChartLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<x values\>\"", ",", "\"\<y values\>\"", ",", "\"\<z values\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.6861463010898*^9, {3.68614647174651*^9, 3.686146519270433*^9}, {
   3.686146565293651*^9, 3.686146645511726*^9}, {3.6861477624252996`*^9, 
   3.686147769111611*^9}, {3.686148028924644*^9, 3.686148063047791*^9}, {
   3.68614815409826*^9, 3.686148203873384*^9}, {3.686148287794565*^9, 
   3.686148309767912*^9}, {3.6861483799915743`*^9, 3.68614839187632*^9}, 
   3.686148438512945*^9, {3.6861487648729553`*^9, 3.6861488383054457`*^9}, {
   3.686150157706255*^9, 3.68615016110469*^9}, {3.686150202601639*^9, 
   3.6861504325830812`*^9}, {3.6861527816224327`*^9, 3.686152826298669*^9}, {
   3.68615641849676*^9, 3.6861564271933928`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5389999999999999]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5389999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-5., 0.}, {0., 22}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 22]& , TagBoxNote -> "22"], 
              StyleBox["22", {}, StripOnInput -> False]], Annotation[#, 
              Style[22, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0., 0.}, {5., 384}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 384]& , TagBoxNote -> "384"], 
              StyleBox["384", {}, StripOnInput -> False]], Annotation[#, 
              Style[384, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{5., 0.}, {10., 573}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 573]& , TagBoxNote -> "573"], 
              StyleBox["573", {}, StripOnInput -> False]], Annotation[#, 
              Style[573, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{10., 0.}, {15., 682}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 682]& , TagBoxNote -> "682"], 
              StyleBox["682", {}, StripOnInput -> False]], Annotation[#, 
              Style[682, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{15., 0.}, {20., 699}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 699]& , TagBoxNote -> "699"], 
              StyleBox["699", {}, StripOnInput -> False]], Annotation[#, 
              Style[699, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{20., 0.}, {25., 716}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 716]& , TagBoxNote -> "716"], 
              StyleBox["716", {}, StripOnInput -> False]], Annotation[#, 
              Style[716, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{25., 0.}, {30., 648}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 648]& , TagBoxNote -> "648"], 
              StyleBox["648", {}, StripOnInput -> False]], Annotation[#, 
              Style[648, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{30., 0.}, {35., 534}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 534]& , TagBoxNote -> "534"], 
              StyleBox["534", {}, StripOnInput -> False]], Annotation[#, 
              Style[534, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{35., 0.}, {40., 138}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 138]& , TagBoxNote -> "138"], 
              StyleBox["138", {}, StripOnInput -> False]], Annotation[#, 
              Style[138, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5389999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-65., 0.}, {-60., 89}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 89]& , TagBoxNote -> "89"], 
              StyleBox["89", {}, StripOnInput -> False]], Annotation[#, 
              Style[89, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-60., 0.}, {-55., 370}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 370]& , TagBoxNote -> "370"], 
              StyleBox["370", {}, StripOnInput -> False]], Annotation[#, 
              Style[370, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-55., 0.}, {-50., 438}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 438]& , TagBoxNote -> "438"], 
              StyleBox["438", {}, StripOnInput -> False]], Annotation[#, 
              Style[438, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-50., 0.}, {-45., 488}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 488]& , TagBoxNote -> "488"], 
              StyleBox["488", {}, StripOnInput -> False]], Annotation[#, 
              Style[488, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-45., 0.}, {-40., 476}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 476]& , TagBoxNote -> "476"], 
              StyleBox["476", {}, StripOnInput -> False]], Annotation[#, 
              Style[476, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-40., 0.}, {-35., 495}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 495]& , TagBoxNote -> "495"], 
              StyleBox["495", {}, StripOnInput -> False]], Annotation[#, 
              Style[495, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-35., 0.}, {-30., 488}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 488]& , TagBoxNote -> "488"], 
              StyleBox["488", {}, StripOnInput -> False]], Annotation[#, 
              Style[488, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-30., 0.}, {-25., 472}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 472]& , TagBoxNote -> "472"], 
              StyleBox["472", {}, StripOnInput -> False]], Annotation[#, 
              Style[472, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-25., 0.}, {-20., 421}, "RoundingRadius" -> 0]
                  }]}, StatusArea[#, 421]& , TagBoxNote -> "421"], 
              StyleBox["421", {}, StripOnInput -> False]], Annotation[#, 
              Style[421, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-20., 0.}, {-15., 369}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 369]& , TagBoxNote -> "369"], 
              StyleBox["369", {}, StripOnInput -> False]], Annotation[#, 
              Style[369, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-15., 0.}, {-10., 249}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 249]& , TagBoxNote -> "249"], 
              StyleBox["249", {}, StripOnInput -> False]], Annotation[#, 
              Style[249, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-10., 0.}, {-5., 41}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 41]& , TagBoxNote -> "41"], 
              StyleBox["41", {}, StripOnInput -> False]], Annotation[#, 
              Style[41, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5389999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{10., 0.}, {15., 92}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 92]& , TagBoxNote -> "92"], 
              StyleBox["92", {}, StripOnInput -> False]], Annotation[#, 
              Style[92, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{15., 0.}, {20., 2205}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2205]& , TagBoxNote -> "2205"], 
              StyleBox["2205", {}, StripOnInput -> False]], Annotation[#, 
              Style[2205, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{20., 0.}, {25., 1430}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1430]& , TagBoxNote -> "1430"], 
              StyleBox["1430", {}, StripOnInput -> False]], Annotation[#, 
              Style[1430, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{25., 0.}, {30., 568}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 568]& , TagBoxNote -> "568"], 
              StyleBox["568", {}, StripOnInput -> False]], Annotation[#, 
              Style[568, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{30., 0.}, {35., 101}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 101]& , TagBoxNote -> "101"], 
              StyleBox["101", {}, StripOnInput -> False]], Annotation[#, 
              Style[101, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, \
{{{{}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-67.1, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-65., 40.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x values\"", "\"y values\"", "\"z values\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5389999999999999]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5389999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5389999999999999]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5389999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.686229504563693*^9, 3.68622957134676*^9, 3.686238489847671*^9, 
   3.68624105741784*^9, 3.686241148966774*^9, {3.686241188114472*^9, 
   3.68624123370183*^9}, 3.686241317531908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"data", ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
     RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "50", "]"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"BarLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "100"}]}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<3D Potato Chip\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Mesh", "\[Rule]", "10"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Topography\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Bold"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6860784710976057`*^9, 3.686078472508947*^9}, 
   3.686078524729375*^9, {3.686078620432477*^9, 3.686078645852882*^9}, {
   3.68607868284538*^9, 3.686078695960265*^9}, {3.686078726490234*^9, 
   3.686078727219696*^9}, {3.686079356904583*^9, 3.686079383404932*^9}, {
   3.686079613279849*^9, 3.686079625164545*^9}, {3.686079777258669*^9, 
   3.686079805234696*^9}, {3.686080110659699*^9, 3.686080119473236*^9}, {
   3.686080774186194*^9, 3.686080775079812*^9}, {3.6860845878512497`*^9, 
   3.6860845896729527`*^9}, {3.686085310529786*^9, 3.686085318166263*^9}, {
   3.6861450719652233`*^9, 3.686145087900837*^9}, {3.6861451376154127`*^9, 
   3.686145193097556*^9}, {3.68614537720723*^9, 3.686145378500412*^9}, {
   3.686145461691257*^9, 3.6861454713446007`*^9}, {3.686145650695078*^9, 
   3.686145671990252*^9}, {3.686145853113922*^9, 3.686145894413945*^9}, {
   3.6861485630968323`*^9, 3.6861485678379307`*^9}, {3.6861486789989853`*^9, 
   3.68614868494576*^9}, {3.6861487334383917`*^9, 3.6861487340501966`*^9}, {
   3.686156361127324*^9, 3.686156367882547*^9}, {3.686156448375483*^9, 
   3.68615649824475*^9}, {3.6861670082315407`*^9, 3.686167008772744*^9}, {
   3.6861672679020023`*^9, 3.6861672694860907`*^9}, {3.6861697186399307`*^9, 
   3.686169782982614*^9}, {3.686169833727618*^9, 3.686169834828624*^9}, {
   3.686226985304626*^9, 3.686226993890277*^9}, {3.6862294467956247`*^9, 
   3.686229447154993*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJyN3clO7EuX3mFkTxhiiQEDBjiFEEIplJlA0jd711fHvV3yJVjy2LfAnRWX
VJfgwck3jniCV3mYoP3bixUr+uYfsdZ//D//73//3393cHCw/A8HB//+ID/b
jz9/L77+/P28+/cd/GX373v40+7ft0Ve/ZF/gOffpvtc5B9Luq8f3/9feXny
k3TPsd/8Nj0PyEeP5RMeO7fw5PemyD/AY0fSMV+PyOfvo/9ix992/94Ufgd/
KfLvu3/fws1vePIb+2Nn7L9H3vZjvtSzRT56HgvPv5Ovyx23fMKT36QbPUl3
XeRv4Ckfy9nyCU+5qCd2PiKffD3Dk17qq9kTbr+Onqcin/SsR/tRuPV+ibw8
6a52v692POX8iPxDkf/Y/XsDT3laPpaD+X2A59/5u4uv73rTTvbZn/ybbsrh
CR65tJPoT/0+I5/6y/9rZ/4/ep6Rv0T+Fvnk/6XIb5F/KvKx4xr51KP2JP/W
b+S0M/nSHscN6+UB+fw7di53PPVrvae93cPtL+H2F9NVPvlZYk/KbQWPnRt4
yi31o/418snXDdx2GD13RT7tQP3Wo/L5rf4r5D+KfPS+wWNf9EVPyuX1b8o7
Toa7zlF+W+STr+sd/yjyzqfh49/oSXtYwZ0fLX/1J5+2H8cfyz/9SHvW8Py9
5Wm/CE+5PMNtJ6arPZaD9qQ8oj/5eoIn3Xe441j0R6/tpNVv8vsKj37L0/5r
upab80XkY88b8tGrfvtF+Bh/4Wnnt/Cku4WnHVgOYz7Y/V7tuOtb7XyAa6d6
loWv4M4L2m+6I59Fj/L2x3DnWe3cwG3n0eM6R3nbSfL1BredRE/K/xH5sZ7+
m/ZHzy28tR/X1ab7Co/d7/AxbpJu8m97SPnewV0n2B60M/n8gMce68t9cbjt
fL3jrT17zmA5P8LHfqPoX8JTbvk77XyAWz7hjv8tX6Zru3IeDLffme4L3HWI
9ZV+2uwJdx0lt9zsj+HjnAI97nPDk0/bj+cVloP1YrsNH+VOuvl7y8H+rp3p
v+b3HT72FeixHYYnn3eF38Pd94XbnsOd3y037R/nCMV++53jUnjSs96dx7X/
EW5/35DuVeHXcM/NLM8nuP0uvLW3cb5T7FkWvoK7f7E9aGfkXuG2T3n66b5y
C1/DUy7Wl/1UO9/gsecDPs4TSTf5sb94Xhf52LGAOx6Ge04bPsYjeMrhBu45
mHru4bHfcnAdbr62cMeB8LH/gXtOHh67tTP/foaPc+3d75sdTzlfFq6dyc8T
3P5ouu/wXbl9tnaVcSP2tHJw/ET/aFfm66Jw24nzqfo/4OPcudh/DR/9EL4r
38+m/wb5sU+Gu/4MH+fpxc4V3HkZO0c9a889fJfulK+xvinpqif/Vk/K5Qz5
1J/tf5xfwF1fWW4PcPtFuP0i3H4RHvtfC1/sft/uuO053HyFxw717+wZ9RI+
zhfQk3o5g8ce82t/D3f/Ej2jHOH2R8un6U+9Wz6XhS/h7oPCXRdZ78/w1Psp
epKfxd+0Z+w34GNchtsfw+1Hlucv+Nhnosf1ueWzhXsOH976kedvkR/fseCu
f5R/hrtOC3edJrf9j+8xu9938BfkXXehf/SX8NRr0o1+xzfTvYR7PmD5t3R/
wdMeFiXdJXyX7pSv6DFfjmPafw13Pg13vWc7PEXefYH6V3D7XfhYfxd+C09/
0B7P35S/h6cet3D7nfLqcb8fbj8KH+uAYqf2u79T/wvc/hI+7knAne+Uf4fb
zsNtn9uv73o/kI+ekyK/KPwCPr5voX+cD8L9vmy5WQ7O+9qfdqidS7j9Inzc
d4GP78SFb+Cew4SP+aPwe3ja+SPc9hzu9+7w6H2F267kV3C/R2DPqJdwzw8t
5ye4+z7LeQ0f6xi4/ddy0H7nccv5BW6/ptw+f8Fjd9rn/Y6nPs7htrfw1m5b
OYS3eml2Loo9F4Uv4doZ7v7LerHd5t+2z2a/45jlfAZ3vNL+a/g4L4OnnK3f
Vj7eL1LPDdzzKOVv4ZZneP59DHe+Vs8D3P4S7jmP8o9F/hlu/wof+yu4+1z1
a6fzi/wd7vo2PPXxAvdcV/lf8LQn223Wn03e/ui5h+Vjft03aWfaycPX978/
gyf/54Vfwsd3fXjq6QTe9I/7PYVfw+2/4a3ftX407u8WOy/gzZ5xPlj4b9J1
HjHdFbzpdx0SnnxZ755Lq+cO7v2xcO9fKb+Fe89WPU9w+3V40nuEO/6o5wNu
/5W/wB3HsOdTPZ4r7itn50f1N/vtLylH9UT+CJ58Lna/H+HHhZ8Wfg4f90cL
X8Jj/1mRV8+4j1L4Gj7uX/5NPY4n4Wnnv3e/rfcT5FM+5stxxvxu4fajcPtR
uP0o3P0CfLS38LSf3/CW39j/Avd+o/m6h0fuDW6/007bp/d/LB/tdNxQ/xHc
fvREutav60bb2wbuOG+5PcMj18on9mvnSeEX8HEfsfAVfOx7scf7M+rZwFs5
pN3Ynj23NF/XcNfh4eN9QtGzhnv+HD7G/cJ/F/vPkfcdkHaaruv8cMeHcMcH
+W+460ztvIR7LqqdL3DHJdId44D2nMKdd6z3e7jjj+VgO/e7jOVsvhxntN/2
P87N4Y4D6m/ls4CnXrQn+c348Pz1Pb1F4RfwcZ8bnvI6gvu9Tz3XcO+7Wg6H
Rf8GbjnL14Vv4ePdYLFfPb6/U/8D3O9T8mO4+yztuYN7bhbu+AAf/TTc9YP8
Eu45zL725nyknhXcdXi46xDL4RHuvsBy+AX3/pJ22t7s15Z/K+eWrv3F+8nm
6xWedK0X722qJ/365et7eieFL+DjfSPc9yzyg6L/uPBT+HgvWvglfNyrLnwN
972hfAN3XAr3HZ/8Du75XrjfHZR/LPLPcO+TyD/gtlu59Wh/t5wtB7/3af8L
PH//9jP/LPZ/NvvP4K1deZ/K9nAIdx2r/APcc1Ht/F344mc7p3JwnWB+0+9e
sf8U7ve78PHetfAlfNzrLfwQ7rikPWfw8T658KvCr+H29/C02yO432X26XEc
CHcckLf6tdxsz+b3Bu45RrjrmfDRnwt/h6c/fvzMRzuXW1/uN7V/C3ecNF/P
cMdJebP/V+H2L9/T7dPvukX9B3DnQcvNenH81J7fhdv+c09V+fG9BJ77BuYr
+lNub9/1j/Yc7jxuPz1E3u8g8jO444n8Cj7e6RW+gTueaM9p4YtizxLuemaf
PeN+XuH2o9TXAfK2Q9NdF34Dd5wMd5wMd/0fbjuX//qZT+Vve7Met3DPl7Tz
Ce64Kn8v/Hfhz4W/Fm75OL5Zbi1d+4vnMMpbPs2e1t6iN/39fcdd58jP4a5n
wu3X8jXcfm26J/Cke1b4BdzvJvJV4Ru4/V1ue47cAfKeD8hv4PbrcO87hdvO
5da759vh45y66Hku/K3wYucYT5Rfwt0XaOcT3PFB/l647crzcMp/jA/qafmy
f7X24H0882v/8pzNdO1fSXdRuP1i+P8qdqadf6DnqPATePQsCr8ofAkf728L
v4GnXg/hsfO48DN47Dkv/BI+/B0UvoY7/si38LTPX3DHB/kVfLyX+5vpOm6o
/7nwt8I/fuafLV+ncM9LLZ97uOOJ+l9+5p/Fzr/eQcJfC38v3Pbg/Rblbbex
49/ev3PnTfXbf503bQ+2/+jZpfupnl2/m/hJ4WeFX8CH36jCV4Vv4PS7T9pP
2uGn5W9+GQ8n+xeFL/+m/awTtDN/92k7f4HTH+Vp55P8AZx5bcrXZcnXDZzv
GlO6T4W/F/77b9ofO48LPy/2Xxe+LvnawtkHTXa+Ft7aofo5z5nkW/3a73jn
MskvinzWCb92POV5VPhp4Qt49F8Wvix8Bfd7RLj3HMJdr6pnXfgdXL9Y6B/z
i+mew8d7JPi4Z1n0PBX+Wvivwo/hrR5d/1g+W3jG398l3UM4/XdK96zwq8I3
cNdj1uMz3PWMPPOy9p8g771f5S+KvPkafhaK/fdw76/KXwp/+5l/tvbjOOC+
w/zabj2Hsf3/Ltz2MMbfIu84k/Jc7P6u1Mun+Tos8sdF/qzInxf5Szj+0ya+
ho/3n4Xbzsc+AXnnKcvzAM68MOXrtPAlfPh7KvwGPt5bFjvv4a5DLIeXIv9e
eNaNloPtJPk9KfwKTn+f8vsIdx1Y5qOJt/q13dKvp/xu4cxfk53P8PEdscjb
zl3nm67lM74rHfw9+9kPTnpsn5zvTfaYX9cDv7HH9uy8o3zG4XDa28QXJd2L
In8Fp58OPvwN/czH+Bw+xpODn+3JOkF7jgs/K/wSzrg68TWccXWy/xlOex7c
dQV8zLNT+cBdp5nfJdx1svm6gzN+Tvl6KvwF7jmJ3Prye4R2buGuc7THenGd
I7d8hv+CIv9QeKtHy9PzvX313tq/55nKayfjYRsfPtVvv6b/fqon82Cxf+Jn
hV8UfgXHv8cndo75rpTzpP+o8NPCL+GxZ1n4Cs57t8nOF7jrk9IOJz3X8OHP
rvBbOPf3pnQf4PTHib/BXZ9oT9ZdZb6b+KLwDZz+PuXrvvBHOPeCJv2/S77O
4dwnnMrtFe650L720OqXc5JJ3nbIfeOpnVtukc/8/k9f3+TG+CY/K/y8cNuz
93Min3wdwD1Xl58Wvij8Es74MNmzKvwG7n3LcOejKb8HP9uZdaP8ovArePRf
F76BD79axf4tfLxbK/y58De453Xas4a7XtLOB7jrJfkr3PWS9mT9v69eXMeq
x3bl+kQ7X+DuX0zXdt7areth7bG/+25LO3//+fuz9OtPy+248NPCz+Hkd0p3
Wbjtx3MYy+EX3HmwjFcTPyl8UfJ1AWdcmuzcFH4Hdz4t/WXiL3DXP/JDuOvM
ffkNv4Izvk38Fu73nTKO7c2v66Uyjk3lb36dH5W/gbuuK+PtxF/hruv2laf7
i3391O+q2mM7cZ/1D/QfFX4K5zx54pfwNj44j/8D/gvOODDZefjxMz+Bx86z
wi/gvqeWr+CMDxO/hfudItx5HPkxj6v/d7HzGO69CPk13HWC/AbuesZ8PRT+
XPgr3PkUez5b+7Gduy5V/g7uOkeunlY+rkPUY7/w/Ef5/Nj+rV/n0zIOfFo+
p4UvCrfc3Jdpz0XhSzjruonfwL2fUMp5krd8/C5jundw3k1M/KnwF3jsOYFv
izzfGSc7rwrfFH4Ldx6XH8IZbyf+Bh/3Xg5+lj/++Jmfw51n9+XLdUsZl+Rj
HaL+zFP/jJ2Zd+T5kWdekx8Xfg53/gr3vq58U/gb3PkIPv5OvoW7z5U/F34C
dx63HFZw52X13xf+Uvii2PMOb+Xm+271/Cryy8Jv4Pn3Hdx5Tf4K537aZOdp
4Qu4fr/la/i4Z1y4erxfRL4+W3lmH1363cRPCz+Hk99P070ufF34R+G7n8me
w4+f+VnhV3Dni9KPPm0/28IfC38u/A3uflB7Mo+br5OPn/kF3HMA9d/Dncfl
R3DXUWXcML9jftce9bi+KuPGxG/gjBtTviyH4b+pyL8W/gBfF3nu9U35tT17
XqEe023tdvi/Kzzz/h9f3/5+zOPyEzj2T/wCzrpu4qvCD+Cx56jwU3jsWRS+
hDsfhTsfhTsfyV8Lf4f7XUB7juH6F5Jfwl1HydeFb+Hui8OHP6Mi/wZ3X2y6
+Ql33aj8pvBbOOeck/2Phb/A9TNguraT8f6k2GM5Rz4/4d57wZ6pX3jeHk4/
+lT+tPDFz/xzT7ud9JzDWRdN/LrwdeE3cPfX4Z7zIz/ORdV/CHd9Es73tUnP
LdzxPHz4ky38Ge46JNx1iPZcFf4Ip31O+bV8wk8Kv4B7fiK/h9NPp3KwXlwf
hrMfnPS/F/ms38L9nvuf4Jln5ceFnxR+Bk++Lgq/KnxV+AbuflD5W/jws1/4
Y+EvcOdN7Bk/2pN5Wf2/Pn6Un/Lld1X1b+HDX0PRk3ainvQX+QncdYvy5stz
KuXTL0r7mfhV4avCN3DXw+brHO74X9rbp+W/Lfyx8Be442dp/xP/9TOf6pfz
rkn+Gc45wFQOB4Vfwh3f9uU3/BTu/Kv+G7j7Jsu/lOdUDpE/gruvlC/h7hPV
/wpv5TD82BY92Wf9Z+xp7ST7HeWP4KzTJr4oei7hvr+Trws/hjd7ku554ddw
7/2G068n/lD4c+FvcNfz2DPWt9p5CPeejPwKHj2bwm/hzpvyF3j0qt/vcdqZ
9Yb1ewGPnavC7+Gsoyb5pyLfyv+uyNtfkq9XOOv/SX/GVfUcw903lfY/8Ut4
0r0u/Aze9Ef+qvA1POVwC3c+Le1w4s+F734m+w8/fuYncPehyl/AvTdb2u3E
N/ART7Hw+8KfCn+F+51X/gvuerLMF1O53cDdV5ZxUnvG+qeMk3vL0/PY8OEP
t8ibr9ZOXA/sq3fXJ9pjft1Xql/7WQ9M8o4bvK/Rnqmcvb/9X3bc8Tzc/WO4
+x35VeGOV62dxM6si7Qz47Z8UdK9KHxZ+Aru/BhOf594K/8D5Fu+XC8pfwl3
Pab9N/Bm/4gvVeSfC3+FO2/KfxV+DPdeuvLmN/++LXwLH3FWivwb3HWg9thu
XeeY7hPc9c++8sl83MrTfp1yeYEnXftF9Niv/X6hnszXZZyZ+Bmc/jtxyy3l
mfFT+cwLpnta+KKke1n4Ek77/LR8bgrfwpOvc7jrN9O9LnwDp79M6d4X/gj3
nKT0I+0Z4792ruCur8p4NfEnuOsrebPnV+EHcM+v9rU336Np/zN8vKsv9rz/
Td7a4fDPW+Qtz8jb3z2v+K/wYzjlM8mfF277Z907yWeelS8Kvyx8CafdDk45
T9z25vqhjKuTPSeFnxV+UfgV3PWP9t/CGTcm/lj4C9x5ED6NG5G3XbV6ZJyc
+Bre6nHEaS78ofBnuOuN0k4mfgd3XSF/hXt+IreduH7bV57U16TfcmD/Mskv
Srq2T8el0l8mfgaP3ovCrwpfwWP/pnDTdd9U+t2n+b0v/LHwl8KP4YzDU37N
l/NI67/m6wDueVTpdxN/h7s+Kf1o0vNU+C+454r/DftPCl/AeX8xlfMDnH49
8VbOmWe15xLuexD5Cu44Ge56RjstN76nTHwNd39nug+FPxduuw0/QN59mfys
8PPCrwq/hie/lkPsvC38sfCXwt9+5mM8155DOOPnxDfwpHtX+H3hT4W/w53v
5PZT97nqb+VgfXk/YV95Ms7sTdf5znRPCj8r/Ljw08LPC78s/BpOe/40X0dw
3ilMfFn4Cu4+qLTDiT8U/lz4Bdz1Q+kXk577wp8Kfyn8vfBfhd8W/lj42898
zPvKbwtv8tav+/rSfg7++447v8gXhV8WvoQ7PstP4I6T8hXceTbc8VP+UPhT
4Yfwlt9mZ/69Kfy+8NfC3ws/g7tOUH5buOUz4mIW+Y/Cz+HO49bjLdz5Wnve
ivwx3HWF/AXufGS66vG8t7TzT9NdFG47TLpHRf608Es459sTX8PdB6n/rPDz
wq/grBMmvoE7Dpd+NPFHeGs/4RfIO2+q/6bwu8If4CPOeuGvcOcvueXsfWnl
Xwp/K9x23srH7/7my/YZPdaX6wr1fBRuebb8jjg3hdvvWn/xnsC+8kT/wf9A
zynceVl+Avf8SvllkV/B3V9rv/LOy+q5K/wBHv3my32l/ArOeDKle1/4E3zE
kS38vfBjOOddE7+FOw+q/xzuPKv+NzjjzMRth55Dyi/hrkOU38I9l9Ae8xX5
zLPFzomfFn4Odz5V/rrwNZx12iR/AXcfV/rppP+m8LvC7+G0qyndW7j7l9Ju
J/3Phb8V/lD4U+GvhR/DW/mHXxVu+btusRze4bFnAW/tzfNP9aef/k/sWRSe
ebCNt8qfFX5R+LLwVeG2Q9YzTX5wx8lwx235Ap5yvoM7T6nnqfDXwtXjvsn8
bov8M9z1rdxyC1e/44D2XCLvuFrkJ35V+D3c8aTU78TP4E2/48k+/Wnfi6L/
Ge7+QvmHIp/28L+Qvyr8ovAHuPt6+SU8eh6L/As85fNU5OWRT3sr9n/usz96
Hov8Bdx7HaUcJvlnuPk9//pm97AzXP9a4RkvtvCUb/RcoOcFrv/58MiNuNA7
TrytwfHvNLj30MJNNzx6R7xc0r2Fpxyif4k973C/L1xj5yvcd53Rk3wu4dE7
/m7HR3ya3e/NjttfbrD/AW68ReXv4MbVVc8NPOV4DR/xa3e/b3ecc4PBjYsU
7vvW8Ng57uHCV/ARZ3f3+27HfQd0i/wVPPV9Dk/9jrglO66/3/ARZ333e7vj
+oUI1/77r292j3sd8L/m4R1/Rv4B+SXyxnlHz19xt3Z8xI/Z8cev7/kZcRi+
y491YPSkXF6Q517f0D/iUux+P5HuM1w/GM/wBfqHv/7YteN+d45+6yvyvrNL
uviHH/K8c5z03MH1dx2uv9PXHSdfUzzEtEfjPF4j3+JS+R5Z//n6Sx9xTXa/
/1H06I/3GHnjYoTrX0u+hntvWXn9eunX/Q/s1K8U7Xbyb7Dj07vyBfL6z1Fe
fwX6T/Pd7lGRXxT505/5Z3sXb7rkd3r/K7d8fA/iO3rvZ/peST3tPaz9vbwT
nN4F/IZvCl9/5+1+8nQfz3u83geQ38Cj57LIn8Lb/THPx8r9xild7ye4ztn3
fTDz3K+f+fg+Xr4/Tufqniu282Tt8dzDc0v23dM+1P2a3yncR7gfYZ9y8C9w
9wtjvtn9vvj6Zt+Yv1yfh2dd7bsk1s/ju+d1kQ/3XuvqOx/1u0a+rJMHzzpw
Bb8t8nfwj5/56L9b+Bvccrgv8q7fXKdxH2NaB8Ye111tPRY9rAOHHtdRaSeP
3+WHHvjIr3p+/cw/Cx/l/Ix84X/tR4ud8vef+bBH/YWP/CrfeOx/+c6ndab3
YFNf6c/jN/YnXfVE/ys866jUY9adRc8oH/V8FO461naufObT1Avx6Kf1dvpR
9Nie30j35Wf50R5a+ZDuKGf1x/7US+w/Llw9Sfe98JSDek4LTzm3coB/FvlR
nu/oyTox5Ybfnkk+7balq/zrz/KjfCJvfaW9pRzekHc+kmceT75GnOki/1y4
9ozzmti1464bs8/yPhv2jHJTPuWmPdGTdJOvlI96Lov8O/KOA+oZ9bbj5PdT
+ewT96Xb8oV/7El/2r/2Z78cPZ5TqeewyGf9qfzxz/KfTT71qJ2pl5Qn5zCT
nvfCxzj0c7qfpvuMvON27DEevecJ+Q6inuxrSr6m+N3jXGfH8T8z5fcZ7rih
/S3dtE/PQz6KfMZt9b8W+fTvUo+TvPHNbSfaeQo3/qA844PpPsKdp9Dz2crn
vvDfu78zHvQL8n4HtL2lf6l/gbzjxr444+5z5UMf/Dfy+BP4LPU45Svt0Djp
B8hT/pOdxg333qnlY1x4+5d68v0UPZ+tnNNuzZdx0r3PUNrhlG7aoXE/s75T
T+57WA7GU7b/omdK13Fenn285WC8ae/5KH9d+FXhzU7TtX2q5xfy+Buc9GT+
Nd69ca49NzPO6Qdc/yHqUT75zTu12NPiSrO/3hvnl/XAp/k1XrD9UflfyHNu
M6VrHFvnC8/tjWts/9KerMfU83v327hv18jrb7Pkd288U/u19me+M26v+sd3
EXjKM/5StNO4q/ajcM8BTNc4qu7H99np92vtMX5ryif+Hywf47S6DlGP8ZHT
Hoxj6/0f5dPOWxzDEn95Krf0d8vH+JLciza+82ezp+k3LqTjQGmHe+N+2q8t
T+MIh+9+pnSNy+l9lVK/Uzv8jbzrc/VkPNGeQ7h+vfyeeFR4+ovf+4zv6TqW
eJ1jnIkez8nD3Ue3dms8UOM8Ro/xYd03of+z5df4iZ6jyo1X635Q+RvkvY9a
4vxO5XkDZz81xVE1fqLrN+sx/ct0jUfJudzeuG+OJ9pvvF39ScqN80i9Kz/l
y3FJO40Laf+VG6/QcUB54+XRTqZ8tXoxvmHkk06p98GN+6P8othvXDD7e4n3
NLj9qKTb6mvSb/w1z9vl6Y+ma/xc1p+THuNaui61nI3fZ7s1v/lRj3EGx/2t
oj/9Xf3G72Md1eJeTfp3P1N+1eO9HfUYz4tz6RYPa9Kzgec78m/0uD/STuOp
Oe+YrnHNvCesPQu440Opx0ne+Fy+j2vtv8Xn8n6O8ct8H609xiNr6eqP4o+v
73KFT/GMPLdR/6Zw42R5b3mfnexnJ25cKscN9Rufy/FTPQv0OD9GPvrzY/1q
v/OIejKemK7xrWjnU//6jbzjzL50hz/Ag+/ce4Pqyfkbeqa4S65/1JP1ifao
x3MPuXG4HB+0Z/dTx7F96fqdQv1Nj3GOuKc0uH4DwlO/xjPy3FI93ids+lv5
c8426Tfulfeg5PkJdx2o/F3hxgWj303yNz/z6Z4h5zCTnZnn1Z9xVT2vcNcV
0cO8Oel5hvteUnuMo2T/Nd3fJV3jNzmumq8HuPOIdh7BPX8z3Vu476bl3hel
HY502z1Y3/Ni51RfnpOox/hZtMPp/uoZ8o5j2pPxp7TDKd5NxgH1vxd54/v4
nrS0k0mPcYWiJ7/lh3DayZSucaNob1N+tdN1oPYbh8h3ryWO2MTTL9RjPCzX
Ay0Okdw4R44D++JA2U9LO5niuRz8LD/F63EdWOJxDN7s9x7Ovjg7zL+T/pwT
7rs37vmVeox30+rR83/TbeW2hjPfTdxycFwK972w+TXeEPevWjyaSf8Z3PnX
e/LGW4n+5MN8HcA9P98XP8VxT/3GQ0m+8rMvzoj3t9XjuwP39fvi1PhOWf0Z
V7VzgXzSNW6R55ClHvfGYfH+3r74C95/3hcXw3HVcjAejfdL96Xruis8+o3r
of8H090gT3tucVv2xgGxv2uPcWTsj/viibgOVP+i6Df+hf4B5MZhaXpYn+/1
56//pdZ+lM84ZjyF5jdef/60n0m/cRYoh73xCNw3yfXbHzsP4X6n2Bf3wXfu
++JTUO8TX/xsz1hfKN/ePRnfoennfK/FcdjrT975tNgzyae/m67+7fUP1uLj
mO4CznfziR/AOded7DEegX5d1G/cAf2TyPW3P+4n7X6bX/WH61ff77bmV3/m
jifaqf9q/XvI850XeyY/7eRr0qP/eccr8+s7Pr+n73vf57mW6S6K/GHh+pPP
PTbjBbivbP1Ief32Oy8rr79oxxm5fqptz3L9ZtuP5NaL9wOV11+37YF3lJ/m
i33xpEe/4tTvxPX3br+W63/efVw4/lsm+aPC9Rvv91y5/uE9D9R+/bo7Psj1
55x8fRR5/UtHXn/R4foVd15Wv36ho+cM7nhV+sXE9aetX6PiN37Soz9w/fmU
9jBx/XI7bqtf/+FpD5a/6zfTtRzYr+31Z+54VfyRDh77V0VeP8Oep+l3VL/Z
9rt9fpXtv+rRr7L3Tvf5kY5+/Vq7Xi353evHNfr1u2t/UY9+YiOvf1rPpff5
9eUd98T1G+w8qH79PHsOXPTv9afq+jk8evT/6fdo5c+KvH5NY8+mcP2vUi+T
fv2vDv84Rb963C+rX7+pjpPFH2az51Ou30vKf9Kv/0bGk71+MiOvX8pmJ+U2
2SOPvP5IWf/s9WPp/rG1B+X1Z0h9TfL6aYz8Bu76TT36gWSemuT109jkk+6q
cP1bOu6Zrn4gm7zrhH3+D22f4cnPK9x6iX8M6115/TQ2f4NJV/+By+98+N+I
fMbDxY7fw8933Pty58jfwyOnH7+Mj/oDjNwj8mnf+glM/tUz3vPvfusnRD+B
SS92RU/+/g553/XrbyT5SLrcHxvy3s+JfOop/5908/c38FfkL5Effv6w8wWu
H7PYqf+o6E+6N/DoHf6uvr7/O/qTbtNv+UfPY+Gpl7Fe2/HkP/r0l6gfRb8r
xU7fxSfd4a8BPd4r0M4NXP+E+pkZfg2/vutNucZO/SKGpz2MdfeOp3w2RT52
xR7vvUc+9q3gwy8M9vtuN/r9/hg9+gXVnvGOcMdTX/q3THrXhWd/jT+fv/K3
482v5ng3XvQkf7Ez+VnDk9+M09qZdhL9ft+JHv1hqj/61KM9sfO1yN8iP8YR
+BvyK+RvCk85a0/yEXv8rq2f0nvkh99P0k37WcOTbtpVK8+k67l60rWfRr/+
LS230V6+vv/9Azz94Q6u3wPTvYYnvXFP7Yv0ip4l3PHNenmC89588DH+on+8
/0d+VeRfkccf11/ltOP6sUw5xO6cS2hP2mH0j3ENPSOf8LT/a7jze/S7DrHc
HuD6MQ4f65Ldb/OVejTd4Qd3x1OP6sc/55TfFVz/t5ZbznO0M+knXdut6Vov
Yz0HH/5rko+v73rPi/wz8s5fls8G7jhpvlbwlJt+mB0frPdr+FjH736bL/0/
W+/6eU6/uN1x77drzxpufWnnqP8d1y9K5NN+xj1N0r1AXj/A0a9/2uixvVkv
53DX1eoZ+5Wv7+npv9r+Zb6u4K5D9F+9LPL6J/Q7Rbjzb+zkvdvglr9+vFO/
0e/7I/Vv4JEb5zc77vxrugu4/Tr2uE42Xy9F3nqM/Su4/rothzXyrofNr37C
3afbrq7hrdxcp2nnI9x9Tbj+ZJLuOKcg3bG/LXaeIT/8Me34dsfdD2pPk085
aOd7kX+Bu65Ouo6HtocLePSOeQY9+o0f/n2wx/PzcOev6Hf+Ck87WxQ79T+v
/yXbieWjfw/Lf428/SI87STpxp6kl/aj/Q9F/g5uP0q6Iy4FfPg1i1077vdu
y810HQ9tDwt48pXz6uTXed/8buHGHQhPuuNe89d3vVdw581mp/wCnvI6K/L5
/5Qz9+on+5X3nE3+COcd0NCvfz/teYCP9VPRcw03voZ6VsiPuCbwVi+jXIp+
4zs4joUPv3g7rv/h85/lD5q8cSLwwz/la1H05zuj7WfMYztuXIkt8saV4B6U
8lO8DL+zqOe58DG+7njq6Qn5tLdr5FNfKQfzNeLh7LjvoSyfFdz2Fu48br3k
70z3Do7/sSndS7jrHMthAbcd6u96rFt3POVgfvN9qOl5g3vu1MrfdNOPtP+0
cOt3nGfBU57qtx7Vb3wW533tz3hivVzAk+4x3HMqy/kJ7r7PdmX9jvN6uP3I
chjl/YVe+DiHRb/9yHSNX+N+RP3Wr/u18FbO1q/607/Us4C7/lf+tMiv4bHj
rMgfF57+qH/48b306/u/N/ARPwz9jifm6wTuuYf+5Mf3PdJdwV2Phaf9WJ6x
Z/z++p7e8H+w48Z5Md0lPOVgvSQ94yiN7x/F/ku47V/7t/DxPa/oOYcbd8l2
cg93HWh9WT7up0x3rB933P1auOvzcP3xqv8I7vcC9V8gb/2q/xhunC/LLeVs
XIM18safMt3xvWXHXc/Lx70Y9NtOnActh3GehP7xHmLH3T+G285bnALzO/rT
jo/vu0X/Bdx6NA7CuA+C/i3c9Ynt5wpueWLPWCcbb2L4n0D/Gu55gumO+wU7
7rmN+l+K/BJ5y1medms5t/wa983xp8WbM16D6dpuzZfx49xHW87XcL9DtXLQ
znHuiD0PcNthuOsc7bmC2w7lsavF3TO+nnH0Yk/eO5jfFfL6kTZuyPpn+b++
u2LPNVz/8MYreS58jKPov4Lb/uVn8DF/l3Tv4bZDy8H8uk7TnkXhJ3DXG9q5
hcdO8xv9h3Djz6rHeCiut63fc7jrQNM9Knz4ISPdJfLei1DedhL5A7jxWKPH
7ynhrnPMr3Fnxv2Youc38rHD9pD7mh/Iu6+Xj3fYpLuEu68Jd/7SzsfCx/1W
9J8Xfgy3/ciPCjfekO9D5fdw9yNyyzPtxPJMOS+KnSeFHxZuOyQ+wuDeezQu
zwZufEzrZV3kV4VrT+zP+335aF9f3+27hluextP5vfttnCDjK9ke5Na744/2
nMHHuqHofyw8/cJ8ncJt//KDwi3P1FfqRfnRn7DTOEquByLvOll+DdfPueku
i3z6EeU2xknj42SdYFwe5T0P0f5V4an3FgdK+7XH70TqOS3yB3Dno33xmFz3
ypM/415t4K1+x/37Yn/aofaP7+ekuyh6TgrP7xb3Svkb5G3P8lXh1kuLJ+V5
rPFZFoWfwPkuM8WHeoDrX0U92oPf0RaHa+J3cPbvE087Mb8HcNct+8qBc5gp
DtFLkTceE+uoSc9FkddO4gJM9o/xCXs2cL67TfYYd4l17MQzjrX4SrYr6zH2
HMOTr8PCx7hFurafVg5pP0dwxpmJG/+LeXkqnyfkPS8yDtRt4Wt4az/u97Vz
A/c7rPq1J39/UeStl3Gfu8ifF34K9760ccQWRf6wcMuB9jDJZ9wzLtJZkT8u
3DhZnANP/Lbwu8I3cM6jJvmbwtfwlE9+LAfTbfXCd4HJzhV8vFuDO29aztfI
Y8+k5wxu3B/jSZ0jT7ud9BgvabQD9HNOPtmvnUn3EO74YxyoO7jnRcrfwvXv
aro3RV49LV2/gxgna1n4Bu77DuPpnBd+Cnf8Md1FkT8p/LDws8LzIzdfsUf7
9fNv/Wp/5I/g4/t90bMt/A7ueFXaySS/LvIrOOd7E7feWVdP8pdwxzHtOYdT
L1O8J/U7XpluxhP1WA6OJ+o/g7N+nnj+zjhHxqti3zqlm78zztc13O/Xyi+L
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
v++qfGdkOSi/Qn7cj/3Xn/UcIb/9Lr/3nc7wX1DSzXlC0TNx3z15/2Tf+w7t
LPf8p/vb3g9v8r5b9L6699j97qy898nb/XnvgfyBvFz75c/Ie26s/DV8fG/9
1++83b+lHU73S73H6D1nedItfLrP5j037r1M96O8h3b9XX7cS/E+lfc3vH/C
Oe3E87Pv3oLnn/JzeOrrvcgnv/u+e/K9ePo+6HcizzE8bz+A831k4p7reo4h
z/jkOZLnZpE/LTzlUc5zpnMVz2HgI96699D+BfnRP3bcuF0X8DX8Dfmcb7S4
z1mnLgvPuiZ69H/rucTwb/HF3yd95C8KN46n9oS7js2+23f92Ze9wrOfSrkd
wyOfdLMf5B3Q2HeknF3PP8FfC8+6N+v//LwX/lF41lfDP+dunMz65P47/2x8
3zoBPr27jPw/F3nn2cj/8TOf5innF9d7hY95wXWs47z3vnyfUvi4f6K83HHV
e6GOn54zt/HEe0fpv/keaX8Pt1+H20+VX8EX8Hf4Gm780/Br5Nv5WHj2pzlH
8hwy8vqrD/cdesYNz3s99/A8wXjBnj+M79vocRyI/C3y+nd1fNBvqnFk3Hfr
H3Kcn/z58ymPfsaZ8a5knx9I/Xdl/In+3/mN/M7+MS65jy5+XSZ+Dsev1DSO
6U8g/fQDPuoJPvymwX0fpx7HSc+X3L+8wmNn6v8P+BO8vfvjnGHaF9wVnnaV
cZhzxend3y+477vVcwznneDEfTfHfmeeR95/5kdF3veGft/xPddD4c9w2lt7
J+h89+l7QN9fy1+Rb+/a3I9bL777453ypOcdrn8wue+koucMrh9O94PvhT8X
7rsk79O6fniAe2/H/eNjkffdAe8iJ3nfTbR3B76PznqGcwP3reO9ueufs8Jz
LhGOP6uJe7/d8zH1Hxfu/U/fy7vfzP5u3/20dq+P86txr8nzf7n3r3wf5z43
v/fdV9EPQDjvsD7l7pd9d/bX+vP/A4Teqig=
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        Thickness[50], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          Polygon3DBox[CompressedData["
1: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
J51IFzup5x49vkeND/DR+iv6sY/4Xq9pLMpr2l8O3qusqY/SmM9rWgp4TUdJ
vaYz5T1F3j3klG80/vqZTM87vZ7p3u81LUa6aylnRb3GgfD+7Syvu0/iNc39
DJ+LiPs3foqfRz8Peu2sXQSj9PU7GPfB7X3yrsLnLjze4l5aVTz9LmJi+PdW
bv65s4ce05ewnCN+JNjEz2JqVz7lFS9P4PU+WpKOpL18Xrsmob7LiWJqfyTP
fQ/9KB/tfm50tjLa8AhL+Kz+6+wROlKO5F6bO4Bfaq/pL6zV/O4+s9fWH6EZ
+UgX8kvlNT4y0wvx/Bjd7MHnIfEPUcM5eDlMzJ/hbD8cHCTGfea+Z/4pvo/o
xS3y3+V6mzjyTee1uSzM53DXNODW9R4YZ+v/uNz9f911YbQ9u97mP/qljV+p
t7zXYlylb9K3as3kNaxB9K75kl679/I8+w2d1XDjwl7rU01nxbym6TTEuoem
8qCrKPy9+MZ47eyk9Ro3yivsqiED69JCAJ8ncKjzVIRcpfAJxzrDuZJvVq/x
FoWOhPMhnKaj/gfwoV6k8NoZ+xtOCzjL7awQNUZTh3LnIpbilENTb3oNt2Jl
c9fiXtO6NFIan/zoU3vT00/1QhgKem3fI3SdnnE+YiWnr73cdUmk4VUu5cxK
zWnR73U0rBqqOGvMMyga3h7Ta/nf5Fwmp5YsaC05eSsxp7V65HxEjdJiFvCr
zrLs8dMLPd+qgEOcbuTZoGeEnr+54bYkOgnC0XXwiCdxnR6f5vhF4JuH/uvZ
qedl+PmSnPtrPKeqwlFadBKDroqCOy8Ya3mNlxzwJswtyVuSHpaDn4L0Jz06
UT1pok1vqklaf99rZ6O3s1jGRdBUC6+dIemtAHk7OOsPz5nAnZb7Tmglhrh9
vfa7AtVVH+6TUFMseSqCW2euLvYRNWVlvzTclr6VJXYxsCall+Hz2sprZy6G
OfmWRiPtvHYGSjOuSH/EXXtyKL5+r5GL3D78ioC7FDnS41ObcW34Tk6u0uCu
hl8dr+lRPjPgSjyOdtbR2Xj4Fu9tnA1w1tlZA/Yo/nv0w4Of4ul5lAEu/OBU
X2rRG9WbGTzNyVWR2Dpz0lA5/DqAszqxy4NTGKSVZvSnOFxVoq9ZyVWXPspX
Z64eMcoRux5cvEs9ipvDm/CsbwCeD4mtHP3oTVFiCGc3r+mxMXUWhhfhG+c1
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
nSf67jl9f6o+t9OC52os3y2i7xhZFm33Guv9mB9F23vPNa85/b37vNF2H8Pf
LNffKNXfTNTf1FjP3yrQ55l1r7H+HoU+N6rP5P//vQ/R9n+Qh1jTfGN33yTa
/p6H3gusHuo96HqP/AI+0yFtSBd6X78+56HPQc1kXZ/9kE/48yfy0WdH9NmA
VbxPU3H3U5Nq03tOR+G3iv2Kq5j6f1JhHcD7AvX+QP2fgV4j9Vqp184R0fa7
L/2uU88y9XIjY131nFP/pYNv+fl9Hfcb8VffZdvZI63oZ/Aj+H6Lfxw/J+wH
S3Pek6313bx2H+a6mzn9PHqY8brwfch+NtxB7HWsn3dW17W6ZITt0fr9UEIN
yn2fnyWO8vOCxhPh4zD+wneVZ7L+zry+D0Pf6zBV+rM/LRgR78Yzom1OZ38v
2pSusqPR7Nzr+5iqOL3m8SQ8J3TNw/caS9up+d5Rfaeivu8uLzFSJ4qVhVh5
0W12fLOg92V897m0Ln1Io9J1eb4PXX+7tzxz+rsh0qv+jkgn/rZv+LvTl+H/
JZqWnhVT8fSeOWlcf59D85X57gjh0ZzWvgSvsAqf9kmHmfl/UelR71dVX8S1
eJb9Sq/maC8c63ec0qd0Og79bEcj2+m/ehDuSbsI60u4P7pvGmH5dAaUfy85
4nmuDOXZspX30H5KDWv5WyTy1TNrIXEGwK3+zqB4qsv6HHSg71CvQq/1mUV9
dlGf4R2B5pVHzz3t2Uve5pwJ5VNe+Wv/QuL9D7FbFnc=
           "]]], Lighting -> 
         "Neutral"]}, {}, {}, {}, {}}, {
       GrayLevel[0], 
       Line3DBox[{2, 1, 3, 6, 10, 20, 2901, 2183, 2186, 2190, 2201, 2204, 
        2211, 2109, 733, 775, 2248, 2118, 938, 2391, 2156, 2778, 2169, 2170, 
        2174, 1987, 2013, 2894, 2039, 2049, 2180, 2900, 4238, 2042, 4040, 
        2018, 1994, 1982, 1924, 1879, 4228, 4281, 4218, 4210, 4209, 4206, 
        4204, 4272, 3706, 4270, 4269, 4181, 4179, 4174, 4169, 4265, 4262, 
        4133, 4114, 4291, 4247, 4, 2}, VertexColors -> None]}}, 
     VertexColors -> CompressedData["
1:eJztnf/Ln2UVx59Uwh9kka0cOHpWDJduzWhm5HQXrm9WjMxygs0fmpaV0TTF
RlrCEDJMQ5Fg2VbYYio5h0RmZRuMdI659s0v0yXTzc35jGlrtlCn9Q+cH17w
enPdD/TTB24+XPe5zvU+73Ouc1/XOR9YuOiCrx8zMjIy490jI8f+73fugzcs
OHzaWDv+vNE9zzz+Yrv3xIVnjL6yqY2cuvXw2KUH2vJZt5z06v27213z1zy8
4J6Nbd2Hnn//xZ/Z36af/Phvjkze10Z+cOpF123djP//y1UnrNz6yT3t+KkX
/PHkDfvatifO/eJLh55olTwfHN1897M797YvLxrdtHX1vjbxqwv2fnf31nbJ
xW+cMmfngXbF0lmPLH5gVzt83PbVB8/aUP7/3/OWzPzXA8+3d8786euTbt7X
vvPm8ss3Hd1Ryl+NU8lfzbeSs5qvNa9KzpsuXPHQtBUH2vaVM187ZtOOtmTu
6OnL5z1aPq/0c3Tn5juWvTXWJq2ZPeH2KVvakh2j0w8dWYfnW8lP8bNr9WW/
/uydz7VDG96Yser1ve3Kj2049obdz+F1rPRQzbd6b1o/lZzVvD76jXf9afFF
z7S581c9dvqJe9vcz/38ru9/+IVSHmrX1H6reVX/r95b6bnSw8sbz5l6/aKx
dt/SaU9NXL+2PXbZVW/ftn8txn813+q935737B/e8fsn25cmT37jmjV72tNv
/ucLN7++p5Sf2kWFw2p9KzxUclbzrf5f6a36fzWvSs5qHefMf/PRT6zb1rbN
Pnjl5599oa08dO2N25bsw3Zn8W21vhXerPdWeKj0RvmqGr+aF8VhhR/KVxQ/
FT4rXFW4rf5P8Ub/X82L+lOK20r/FW4p/1B8Uruo5KF6qOSp5lW9t8IP9cvV
fKvx6fpSPqd2Qf149d7KXijeqJzVOJZfoDxM7ZHaXaVPuq+hOKHyV+NQnqT2
e8196/72rdu2tOtOOP+U+efsaue/dOjA3nP3Y7ujeKjWpZKnei/FOdUz3U/R
fVCa/9N+0MIPxVWF50o/1fqm9VDhjeLQst9Kn+k4n8axNC9E91NUfkseC2/X
7vnIzyZM3dy+uePMO+95zzNt0+xPT7n6cL3uVE4an1TraK0v3U9ROSs7ovmc
Cm/VvGh8SONtmm+04uEK53TfXY1TrS/FFfW/Fq5oHsOyI+pPqfzUr1XjU/xX
OLTkpHZU8TPNq9N1p/koKy5N+wU6L+o3KW9Te6G4suzRiovoulvrSPVG7Yji
gfo7Gg/T/HPaHimuLP9o4afSf/XeCg/0vdY41E/R77OWH6T+0cqTU7uz9l+U
Byw7rXBC7Yvi0/I7Fs4rvdH8jBUfWnmtClfpOI36TSsfTuMl+n2f6pnyiWXX
aX9BeZvyBsW/5deof6c8YMnfK59D42R6bseyl7R9WfsaK76lforanbWvsfah
aX6g41j2W+Gfnu+1eJvixPKPNL9E4+Reftn6Dkh5gMYJND608lf0e7313LJr
+n96HsPik3Tc1SvfS/1dJX81Pp0XlZOeQ7bOvaS/X1jndiw7pfOq1pfab2WP
dL7U3q38PN130+9T1nkPy+6sc6fUj9N1p/xD73FQO7XWl8YPNI9k8Z41Dr2f
QvcLNE62+I3iiuqT4t+y0zQeen1Pp/NN8yHlK3qfheIw/Z2rV5xjfUeg/G/h
udf+wjqnQflzaPLTc4zUri1+pvzQ67s21aclj5XHs85L0/0IXV/rvknaHql/
HFoexornrXwj/U5Bn9M8pxXPUP8yXuIHS07rXASNeykOh2bX1XOKt15yWs8r
+6XjpPmH1htJ2xG16zTPWPZe4ZbKb31foHgYmt1Z+33rvWn90/nS83Xpe5q9
7JTmOWkdrTTvpfMkFJ+9vsv0st+hyU/XheohfS+bjtOLB6zzPxbPD+38cNqv
0Xn14o00n1u8XT231p3yT5oHhmbvQ/PXvfxa+j6j9d6h2S+VP+0vhhbnVPOl
eVR6/676f6XP9Dr2+t5Kz31RfzS0fZN1XiLNA0Ozd5qvsPI8VP/WOTTrnkv6
XlIab2l/lL5PPTSesfjE0k96Xmn+tM7n99p/0XEsHqbn1S2et+zUsmsaT44X
nrFwaPG2dZ6kGofeB6TP0+dnqP6p/VI5Ka/SfQS9j5/mB0v/vfIS6Xus6fsI
vfjE2udacYglT9oPWvsyqjeat6H7sqHZb9pfpOeVro9h+bteebah8ZgV/6Tj
Oov3qH0NLc5P80Aa/2l+sPy4dW5wvMczdN2tOidWHEL3F1adGeuc+XixLysP
b+Hc4n8Ln3RfTHEytO9lVM+WHfXyv+lzGpa99Mr/U3ms/eDQ9iNDi6/o+qbt
Nz2vtPxpf5GOA3t9D037R6vOgMUbVR0zqp9qHCuetOZVPR8vfNhLzvGyT+zl
j6gdDS2uoPZC/TLlh+r/dL9v5RMsvPWKK9L5q7RftvBJ50XxnMYPlSdd19fy
7730ZtkRXZdeeK7GT8/XsjsrbknjxDr/YPFAGm/pcz5WvjSdP7T2KZSH03Eg
ja/SPJPe11h47hWf97L3dF7ampd1vsWSP/1/6ztmr/xV+jy8te+gz3vFP2m7
S9uphc9ePFmNs3z2k3fO+u3f29bFB742e2Rb+8XZC26cc7l3biEtT3r/aOkn
fW8xff4kLWc6H5jOP1dyVvhJ8xWNn611ofO1eNh6r/VdOP2dK22/lT57xeFp
fFq8St/bix/Gi5xWHJ7mJYsPKT7T+5Rez3vtj4Y2L2qPlp1S/fTin/R8h8aH
veIxi5esONbCbRqHVrxh4Y36R+u91vhpvKXl7MWTQ+NnS840n6Tnm45Le8lp
+RdrnPGOzzSex7sdDc0uxvvzXvhJ54f/j1tXTjrO3Qu/8vGJn9rSZrw24/gX
f7i+Hbxp9HvvvZXHn9Y6Unms9arem8Z59d5e+9Be/GDZRaVPqude8vTiAcuu
LT1beqPjWLil41v2leZhy37TvJe20174sewx7e/Sfj997qhXXreXfxyaHfWy
x172m84z99JP+jtsOt6zcNhrvkOzl/R8LT+461dXrzrrx0+0q8/+0eIb//pw
O3HK5PU/ua0+R2TJY+kzrbdKP2l90vda+q/eS/vZXXLxG6fM2XmgXbF01iOL
H9jVDh+3ffXBsza0kVO3Hh679EBbPuuWk169f3e7a/6ahxfcsxHfq63Gsfqj
Ve+lfQArPdB6WfS8zU0Xrnho2ooDbfvKma8ds2lHWzJ39PTl8x5tR3duvmPZ
W2Nt0prZE26fsqUt2TE6/dCRdW3ugzcsOHzaWDv+vNE9zzz+Yrv3xIVnjL6y
qcYJ7GNI+4fSfscVHip90rr6tM9pJWe1jtX/K/xU60txW823kofGdRWuqv9X
763GqXBFcVvpmfKDdX7A0lu6XjTlgWpeVM+0Tog1Dq1vnK6nYfURSJ/z7FU/
xDq3k64rkh5/aN9T0vetrDxDr/3yeMl3VfuF6rkVn/f6fpfO//TK96b/n35v
r/W15Bya/NVzGpfS8as4tpdd0P1det3pe+m+leqTjp8+r5X2FxZ+6Pi0H5mV
90jLY/VJpPaeni/N71Xy0/7d6f/TvEovP0j349a8rP1XGm+W/Vo4oX1z0vq0
9qFW38a0X0vX/7TW0eJV63tQ+r1pPVCcWHWJrT59FJ+Wnqv/p+sQWvEP5R8L
z9Y6UnmsfDKdr4U3GldY/JCur9uL/ymuKH6oHVH9WN+t0nEIjdup3igOKZ4p
n1j9ayy/RuM9y//2quds5QGoPi0+seKEdH1pa93TfQosvFn1QtN1pC0eTn9H
TvO/pec0H1r/T/OJdY+jF56pPHRdrO+8tB4slT9dT2lo9/2t8S08UF6i607X
1xqH4jZdF9Q6j5Q+Z5Wu10fltOqJWfW+LPxb/EN5g8qZxo+l/6HVGeulB4s/
0zhM1wu15jVecGLV++3Fq2n/a+E/7R/T+4uh2XuaD616INX/6X1nS/9W/ofq
jdqXVU/DkjN97i6djxqanq37/mk5rfWi4/eqi2XVa+qFH8sfUZ63/Ii17tY6
pvVg4cqyC+t7XK86GNb9rPS6p+16aHW0rPcOrc7JeKkf1QtvdH0tOSlOesWZ
Vp0f614nXRdrnF51eCx8VuOn4yLqvyxcWfFDNY61XnR8K36gdkfHScuT1gMd
P603i5csPfTSTxq3lp9K11W2cJ7+fy+cDM1e6Pj/PO8vZy+b/lw78/6Xf/e+
p//cdr99693n/2NX3I7oe6v/03uR1f9pPTFav6u6507rXFVyVvXi6P16ek61
um9b6aeqS0brMNBzO7R+I8VVNQ6tt1DVwaPfa6p1oXUFaX1Ceq6M1lWr9EPr
sNH6hPS+Z6WfSp5qvar5Vs+p/uk6VnquxqnktPBWjUP5pLLTSn5aJ4Tik54n
pzxM9Unrl1Ieo/6a1tWs9JPmt2q+lX6q+KripTIeg3EI5RPq79L+vcIJ5R96
/5H6d8qTFW6pniv8VOtL68dS/VB7pOtO9WDde6X7C2oXNF6l60jXpRqf1mWy
6u5SPdP8LcUh9bPV+Jb/onio5mXVmad1nKr5UlzR+MG6d0zjMWp31v1BWj+f
xo00j0Hti557pHE1tWuKTyuOpfs+K/6x8GPxLfX7Vv6Q8nP1nPIG5XOrvlaF
T3rvjMa9dBzK/7SPBsU//X+FTzov2r+G8h7lZ6veppU/p3yYxpsVH1q4pX7B
qmdC/SbNv6XXMZ1PoPePLH9nxc+U/6l/sfKKtN9QNQ79P90XW/7Fwi3FCc0P
UPtN2wX9DpvGP5WT5r0t/2j1UaI4pHkMizdoXtGq20/tiOZzKB6sPnTp8a04
jcZLFP+0LjqtE1WNT+3dqmNm9XGw+sRZdmTFOXS9rD5o1XytOr1WvW4rP59e
d1qfs5ecveJ5+l6aX6reS/9fvdfieWpHlOetuoh0Ha04x+JJS05az8TCCX1u
9eelvE3r7VvrRXGb7mdhxXvWvsDCj7UuFCeUDykeLB62+k1YeE7ztvX9nfIM
Pcdi9f2xeI/Ol/KMhX9LDxZ+rHNKdN0t+7Xq+VP5rfjE6otBv4Onv49b77X6
cdD1ovi0+k9Z/QgoDi0+tPjEshfruVUnzdpf07rxdBy6vlacSceh5yIs+a06
OTTflcYhvd8xNP6xnlOcWN8vrLpMFCdWPxf63OKxNF9Z8lj7bqsvT/r/Fj9Y
41j6t/gw3TeT+lmLB6xx0vlDC7fWONS/WPc0Kd6s73dWHE7Ht/qDWPJY/c6s
/Wk6zre+o1H8W3q28hLpuC7dJ8vi4XTexuJJyx4tv2nV5bP4kPKG1b/PWq90
/yPr3qL1PZ3yg7WvtOzdirusvofpvJDFD+k+RHR/YeVVrD4+1rpYerb6nlg8
k/ZfFq9a/bMsHrPGt/p0WPyQHicdP6f3xdZzy16s51T+Xn030t8BrffS8YfW
5yLND5Zdp+ucW/GztV6WX7DqKlv8mca/xW/W+Ok+JlZ/gXS/IYtPrP1aur+J
ZafW/3utY7qfi+UH032shtbXxrILq39fur+J1afG4luLfyw9WOtiyd9r3a35
ptfX6stg4d/CTy/+sfqspfvIWPL06keT7meUxs/Q+jFRHkvzWy8/Pl7st1f/
sl5x73jhE4sn0/3L0v3Ihob/dJ+4dJ+y9HyH5qeG1u+vFx6suhm0nnB1L7iq
M0zrdB3dufmOZW+NtUlrZk+4fcqWtmTH6PRDR9aVfSKqeVX/p324aD2fSv4q
z0/rM6f7blj9FGi93ApXVv8dqw8IxU8lj9W3jtYZoHV46P0LWieH1vGu9EPv
3Vv3TWjdMFrn3LovT3mD1omycEvlse5hWfZCecw6H2vd97fqgVjnJK26DZX8
Vl0L636BVd+P3iu36mZb58mpHtJ1Qqxz2ladEHqeude9Ccpj1n3h9Lnr9L1p
ev7cOu/a67l1/o2Ob50bGdr3O+t7Zfq8aDr/aX3fqf5P+xnRPs5VPqF6XvmL
6v9VXETfWz2nfq3aX9N9Pe1fT/vU0/2RtV+w6iPR59b9d+u5dQ8ifQ6T8vzL
G8+Zev2isXbf0mlPTVy/tj122VVv37Z/bfy5Ze80b0b7jFd4oONQHqB5D1of
mPKD9dzq40D3pxb/WHUVrHumtK6IxTNWHQO6v+6170s/T9fZsOS01sWqh2DV
j0rfj7Pu51r/t/Jmve5PWfdorHvZve77pO+hWM//CxXYVBk=
      "], 
     VertexNormals -> CompressedData["
1:eJztXXdcj1v8zwiVorLKyl5ZWUU5QrbMrLiS7FWihJKZjGtcyY6SFJeL0pA+
paGhvff4tndkRPjd189zvl6/597P/fbwdXF/z/uf4zmezvc8Z3zOZ59uhlvm
rmosISGhKi8h0eTPMnLMntVXrhYSCQb02dD1zo08yxRh/aTjatEbTlaQdllR
A+6/LBHWh1uHLnzukUdU+jrs7nv+DIlsZFW8/lIBmeHrqWtgXyR8j41nFdke
xWvSiE7A7evWMrnE27dn3E5n/H2umN9Pdkx8Vgb5VD4DD/vBraOvlaHta0y9
fszCXEA65iyZvHG1Dxn+Zuhyz0ElnPszuiJMNe90ETlYmXDY2c+DVNauHVxg
XkDe9mi2/LZODnlqk6KyrGkK6ZOvUe/yrJhg489+puVa9ztdF6rnEZfUVmmt
BwOJdVNb0LFpKTn9yLtcp0M+UyZA36WnL1uEFRKVudHp02uLiIz8rcHOzaPg
yWKFqUtTBMRtsaVg775UUlzeOmjg1ttkb4nlrrnTK4jBzI3ayuuDSKtt3Q37
OGQROm7PWP1iP7MBbZrnn36YR3rKP4r6tYk/PO2o09jXuYSwxgfo+EhXZrvI
tisgaXvWKfwyKhnos4qOxdTfawtI1MfcTZa1UUCfuc7LZDOjl4fjBcT1xcy+
qYfjINChx4bTi/D1hvUfez+yv3OA0qUS0jcn7tmmZuEge3Rjk+SWeSRh1sj5
GZOSiPH6KcYxDyKJioJ+nW/rCqI8dF70s2tZZNnaCzJXbCOgLGPmbAstfH1y
RXvWPg1j9un6NsqDdp8sIMnmLociDeOBPntL2BrLyeQQ53XKrWpdY0Hpofq9
KK1SsY0/V6QqrXorbVxEtPquWBfbPA7064PcziYK0N/tYn3TqmPrKHLmwpBD
15s9At25qpOgrJIoXzxQW38ln1xY1arntuexcHFkj5dpgfi6NVpfnnulfyEB
5V8XjnUPA/qMvW/wOCszTLaY3LTwS3SWSYRLR/a/WjI9j7i6zAiq2Z1MS+iW
1DZVfUkZOfjg+O0LiqnkVmCQisqf6/CizwbrupoyYj/x4cPN/TJJE8cMaXWP
BAhLVVlqYFvKeZy9UvsdMQkrJsq5OdbGiffATfHj1sud89H1htGbRQZ+aa62
QWTR47Fnl14WwLG8xCP+AcWkl8uoHjN888l0E+/Gnu+yQG5Seu/KmDxyVjVD
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
evZ4Yn503PzPufcHmy/xtM8d1C/hKcvfTFztYzD5ZFcFtl0V4ysw/65TiP4E
q//73lSjci5GH1Yz/DNTQhOWvpfdvqjxYNMNbnmNuK6HajLwYI+JTWbnE/tD
F8vmq8SA80sv87rlXPPV4PXUf5qx8wO173NtRzx8r/jPfUYPDVT/jMVBY/pS
jP5gchDXuKcv/a5/t53P0P3kVwvUnxbTi/rMXbapu54vtPwgGZdKEmFiiyPH
i+sqiMnDXsv6WPkT408lTDT3tEkxqyJPSiRutX7xkKy9N/DueJswcN413eKJ
RhUqp2D0B+MzMXlZ1Pey1w8mX2DjSenRJhafj8XRYP0QdS6zz01R80vXKbYv
RPlZYft93zT1wzut8oi28XOXu9VJcNLLNOnF9iKywi/hnmqRA7w/+yTYZ38I
8XF9U6u5m7v9pYKkNP+YkkDq02WNtx8OI88PvLJPPo3HBXPVL5UydheHBuq7
qH4Ni+/A/BsbBvHZbbnlUxJNTxqmh/l5wIonJdSfk8nTRZg8XYTm6cLoEsbP
MPktwZiV3xLL24PZc/cWuO5daxBJS1iQNeCR9UTcDsU13xqNz2TTJZbeSSin
YHpXbB1uYOjmBoR+suOGsHawcdBl/DJ1WfG/GN9I7TeMPQeoHUePzt9X+bd8
+fmLyXHseszfFWuf5UcqXG+sOE2R/ocYzrHydTxl5Q1m7EpCPyVRfq3Y+Hwt
Jvu+u9Lvbiq8WfhirqJSKDlW3MGg/93vR8cKmDjNZXk7H1vcNNWkcZqi/o69
HrjK79QezOZvueV5w+UyjB5SewY7DiJi19TbuZlpICz7kY3d/Us4x0cw+RKB
nS8R04ty1U9i9jKqz6Jv/rOdpVoYD9CweK5qzuOA1WN0FfsupbWTjpmtjyDK
n0oY9ahru157Ktl8rDCun65L9jhTuzVXPpwNLJ4Iizfn1jp3OsPI0ZpfJ0dL
SBw6dWTPo3o/Ijeqe7y5TDrZn39MQcXv+9Gl33su3TJJOwDqXW5N73g4ARaV
Zbk2lcDtEVRfxvZL5+rnTOUuWkPlFCxeHqMzlB9C8ooA4xf0l/iplV+lR61G
/X8w/QM2PpifwApkf2HjxvouwvJH+osfLOaHhuVX6b22rdar6fG0hNGdrurX
1JSTQ5s7He4zIZLAzuRCI10fiB/r1GPv20qR/WzYOH8GV/mXDSw+C7NHvOs5
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
/GGhqZ/SM3neH4bHvwtFVd2Asb4hwJREMWPdloV1/DrkwYMHDx48viUyd6dN
HigQwEwHgwnhZRFEauvqa3JteP8EHjx48ODBgwcPHjx4/FfB55P8r8PVZUZQ
ze5kwpTQLaltqvoSPn8RDx48fjx4vzRxWudVDFfnZMgNtPYBeZmC9gtb8nm3
/hvg+Y2fC9Vk/P03VX28D2ky9w8TUfcOfykUmfvWfq571sQFfl/w4MGDBw8e
3wPz1S17rAwSQAdtQ0nvlHQY1Kll1LhXvNzBgwePnwcWfYNTGo9Mg6sXpDdt
Ko8DB7Vu/eWu8PpeHjy+B/JLpW2iPCLA5VDVhjD1HBisP2da6wf8vXg8ePDg
wYPH/ye8ftZbX3JOOBiSs0eemxXBmNa7l+g+/qxnMJcsMrd+L4CEkBy7nHrx
xSOsuawxqP1hF9KKGB9rrZUL8sXXW5mUlZJZghr/wR45RHuspsXl0ESwHesQ
r9nsx4tT7nPvUqbbyAhyq9VS+1WCKMjsVJgfPKOSDJs0pfcu3XzSd/LqDS0W
xYJFyh+CCf2K0P6fkd40bpl9EBjZ3u8S1zEFtHX7GGsN5WrP+vnsNa2mTjFU
1EoA+00bFS/rV5KZB06Mfb4vG2pCI1o9elkAkoc6lhV0yxXbdzHjS+h4f9k4
43BZ13tlt/ECsuHyoeKBkYEw4PYvkmYKP966/dEQCE29HspfAqmW1QmegXlE
eXWk8/Miftx4NAxdpq8zuiLlBIs3hW+bPDAYOiv5Vi61rfpu6+e8S1+vmuMx
hCnh8oplXTVCxe+fwOPnQCftlrOG2RZDS6cta/u+CiCLF1UPd5XJJ5pZL9ab
zMmD0jdqUv7X4sD20N0OS21+nnjP1AoI7uWQAf/3mfv9mJNs3Ty2zMwDuZbt
1rdSjSWD1o482j3qxxuH9I5ufbLs8mGFepXWHlVP6DYhI7d23o/XTx6fEDFu
Un3GwFDioHjmjYdmDkz1G+tkUMRdz+mwoO9FV8cAuPa2081nqxKgaNv+cfMb
/3/zB/v2WN9GedDukwWQbO5yKNIwHpjnbz7OLPoMlD5/69+V9+k6bPSicnia
v6C6XVAAfHrOQH/3WPavxzW3FEEft6H17sv9SUejBBXpNd9+fHj8XDie9CI9
WrMUJM13bN47LxHk7O4H+oRnoutEJUdWUvtSKaT1v+519k0ALPNeIDlYjbvc
HTlmz+orVwuB9Uw6rXnTfY1LNKytehswUTkY8lfFD4g5/u3pZyezOSv0lMOE
/XGMd/YuNeAuF+xJe358egoQpoTTGRcTtay/n3zxrdH4/CKHio058KmMgUUS
uVseDReffbCf+akVc10jwFtnl2rHMwUwJ1Ot+4pzhZzbH2iRtTS+xwzo2u5w
yKHBwWSskcL+xie4z4ul6uq08MxQkimdbS0ISCSzaq+fLTMRn7x2/9aq+z6D
wyDwhvnsqxdLSKN7gT57VfK499NN4ibRSIGzNXs8J1YVkxn9+7VuU5eNtuPh
MNlq1IxMaHGx/5OuDwpI5bnjN0at5v67Iw5/uB//Kg2yA4szTaf9AZe2LpzW
7QV3Pl9ciJYZZOLXJArkbLZoHlgdTCy1XjSvuv79+LFBxk/7XTxfQny3LU7e
HRkNmz09dV9bcKefZX/US0764AHmR9a2yW0XCVGL0jsclRY/nUm4M0v/umoM
KfYf7anw6vO4yc67JhselwMFTSbJHFbH/XN+Hxy1RG1mIbwy7Tuyu3MwMM8/
DT0crB0yafHJP/fNxKSd9jP/IM1Uzk2fEVhGFDI7ZEx685mfsl/xeM3wibje
/mdHQEWX+CsW8aRZ2Y0lN3dnQ5JdTV0f5W/vB5J5bswvne/FgtkyL8GuYR4w
zlnlg6UTL0/x4MGDBw8ePHiIG/8DN50AIg==
      "]], Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], 
      FormBox["y", TraditionalForm], 
      FormBox["z", TraditionalForm]}, DisplayFunction -> Identity, 
    FaceGridsStyle -> Automatic, 
    ImageSize -> {251.94710899871725`, 360.78899380852084`}, ImageSizeRaw -> 
    Automatic, LabelStyle -> Bold, Lighting -> "Neutral", 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotLabel -> 
    FormBox["\"3D Potato Chip\"", TraditionalForm], 
    PlotRange -> {{-1., 37.}, {-64., -9.}, {13., 32.}}, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-0.06623258837225438, -1.7859957593832967`, 
     2.873296432967262}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
              "], {{
                Rational[-15, 2], -50}, {
                Rational[15, 2], 50}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -50}, {
                  Rational[-15, 2], -50}, {
                  Rational[-15, 2], 50}, {
                  Rational[15, 2], 50}, {
                  Rational[15, 2], -50}}, {{
                 7.5, -50}, {-7.5, -50}, {-7.5, 50}, {7.5, 50}, {
                 7.5, -50}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -50.}, {7.5, 50.}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -39.473684210526315`}, 
                    Offset[{4., 0}, {7.5, -39.473684210526315`}]}, {{
                    7.5, -13.157894736842104`}, 
                    Offset[{4., 0}, {7.5, -13.157894736842104`}]}, {{7.5, 
                    13.157894736842104`}, 
                    Offset[{4., 0}, {7.5, 13.157894736842104`}]}, {{7.5, 
                    39.473684210526315`}, 
                    Offset[{4., 0}, {7.5, 39.473684210526315`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -50.}, 
                    Offset[{2.5, 0.}, {7.5, -50.}]}, {{
                    7.5, -44.73684210526316}, 
                    Offset[{2.5, 0.}, {7.5, -44.73684210526316}]}, {{
                    7.5, -34.21052631578947}, 
                    Offset[{2.5, 0.}, {7.5, -34.21052631578947}]}, {{
                    7.5, -28.94736842105263}, 
                    Offset[{2.5, 0.}, {7.5, -28.94736842105263}]}, {{
                    7.5, -23.684210526315788`}, 
                    Offset[{2.5, 0.}, {7.5, -23.684210526315788`}]}, {{
                    7.5, -18.421052631578945`}, 
                    Offset[{2.5, 0.}, {7.5, -18.421052631578945`}]}, {{
                    7.5, -7.894736842105263}, 
                    Offset[{2.5, 0.}, {7.5, -7.894736842105263}]}, {{
                    7.5, -2.631578947368421}, 
                    Offset[{2.5, 0.}, {7.5, -2.631578947368421}]}, {{7.5, 
                    2.631578947368421}, 
                    Offset[{2.5, 0.}, {7.5, 2.631578947368421}]}, {{7.5, 
                    7.894736842105263}, 
                    Offset[{2.5, 0.}, {7.5, 7.894736842105263}]}, {{7.5, 
                    18.421052631578945`}, 
                    Offset[{2.5, 0.}, {7.5, 18.421052631578945`}]}, {{7.5, 
                    23.684210526315788`}, 
                    Offset[{2.5, 0.}, {7.5, 23.684210526315788`}]}, {{7.5, 
                    28.94736842105263}, 
                    Offset[{2.5, 0.}, {7.5, 28.94736842105263}]}, {{7.5, 
                    34.21052631578947}, 
                    Offset[{2.5, 0.}, {7.5, 34.21052631578947}]}, {{7.5, 
                    44.73684210526316}, 
                    Offset[{2.5, 0.}, {7.5, 44.73684210526316}]}, {{7.5, 50.}, 
                    Offset[{2.5, 0.}, {7.5, 50.}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["15", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -39.473684210526315`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -13.157894736842104`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["25", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 13.157894736842104`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 39.473684210526315`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontWeight -> Bold], 
                    Directive[
                    Opacity[1], FontWeight -> Bold]}, StripOnInput -> False], 
                    
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], FontWeight -> Bold], 
                    Directive[
                    Opacity[1], FontWeight -> Bold]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontWeight -> Bold], 
                    Directive[
                    Opacity[1], FontWeight -> Bold]}, StripOnInput -> False], 
                  "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks", 
                StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 100}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontWeight -> Bold, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"13.`", ",", "32.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "100"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.686156499295423*^9, {3.686165944773314*^9, 3.6861659742464542`*^9}, 
   3.686167009904274*^9, 3.686167237005309*^9, 3.686167276358603*^9, 
   3.686168143804056*^9, {3.686169763539639*^9, 3.686169784522977*^9}, 
   3.686169836252277*^9, 3.686223998093028*^9, 3.6862269950873938`*^9, {
   3.686229439595685*^9, 3.686229514904685*^9}, 3.686229574803673*^9, 
   3.6862306413206367`*^9, 3.686238497407673*^9, 3.686241059542858*^9, 
   3.6862411524501057`*^9, {3.686241190739828*^9, 3.6862412361844883`*^9}, 
   3.686241320175383*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJyV3buuK0t6GGBCUMBwGWDAgALoFk1RnFarm/c7uZZGR5ZkW4KAmQcQoNiv
0IlfRn4I7ZdwPolzJQYMR4Zm91+j/vrU8BwmCx+quu68LXb99R//8b//wz/9
wWg0+h//YTT6t7/fH4fX97/Ft+9/9/iId9jrT2/KM93yzm8c5S0y7TP/kfw7
fMBbfMKXTH1ev+y8wfs36Tt8wFG//Y/0XHvtj/ltzyrjC/kb0rfY/nq9+c+k
X/GO/HvseJnueFnfMZM/XHdec30ufYNt/wGf8I32xXjn6re8C47xjuuvpN+p
b0/+O/l3pN9IP7xJr96Unxu/sOU7fifSo76ys+N5xOefmV5Sfo03OOYnrm9I
3+Ir+U33+h2O8Y/r12/SH3hP/vub9CO2PQcc7aky6Sdckr/GjrfXO/72J9ZL
lNdg+3fGV2z/LH+DYz5sb/iJvd7xtv93bP+22P7sSX+Q7vVHvMq01/kP294Y
zzpz/QmvyF/iGttey6vIb/rlTf4NvpG/IT033s5X5D+TvnxT/w47/ld8x0/8
bnz32PZa3ws7Pkcc8938zPrDMV5xfYkP5D/hK471anvCzoflXfANux5ivVl+
uMH254EX5N9ix9/xdDxeODce4R2O9RfXP7HjfcB7fHyT/4Tf1e/6cz3Z39x4
hs84ytt0XuMK2/4LvmHnJ/oT5ZW4xs6X9d3xE8d6y/WnwY7PFT/wCzuero8N
6QU2fYcdny3e4yO2vfb/gE/Y+Tpj67vimI9t5xW2vgu+4Wffrf2L9Rzl2947
Lsi/xI73A7+w/atw03fr9Vvyl3iPbW+NN3iHj30P2tP8/vyD/s9Jd/6dnwM+
4Qu+4Se+46LzrvMSrzHXp/FwPiP/HNO+wfUN+bf4QX6vX5B/hUu8x/F8iPKu
eEb+4k35Nd7gI7Y/n9jydviAT9j1ciHd8TrjK77jJ3b+Y33tO99If/Sd1ofl
xfULvMK58Q1/4oLry77ftmeNK9xg19+MdOpP8x/eYMvfYcvf4yM+4NOb/Gd8
xVts/Rd8ww/serrjJ/7EMX+Hzi/Sp6QXeInfzb/9o72t9cd8RfklrrHtW+EN
3uMdPuIzvuIDvuMnXuNT32k8Ir3CF7zADd5i+0/9g/Jv+NF3+0l6zN+R9oVX
2Pm0vY6H9RWUt8QlrrHz73w6f9Yfz5cob47XuMINdvzetX+LN3iHD3iC9/iE
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
sPNje2O9/bf+9ck38k9Jn+MlLnGNna/1j6cnn/EN2/49PuELvr/Jv8AHfMUP
bH+8PtZreEX67MfTk9f4iM/4hufY6y/Y6wt8xUt8wjG+f9fvT/ISn/AVr/AZ
3/DljWN+qL/N1X8mfYkveIWvP54/nRd/xXt8yORfdr7h3Hn2q35/kh/Y/Lnz
09edd/jd+cmeX+v5tjX5Sxz1xXmZ8f8Gz1vMnY/neXyeD+j5ep4vWGHPN/O8
Nc9T83w2zxussedVeV6c5/EtcPQ/d96W5zF5PpLnx3z27flLKT3Oiyj76YPz
pzhPJ13v+QxR3ryff3AeiOcxfHXOxZuP75fGJ4/zH+J64zEb39/40Mb3zsWL
Nt618bSJdxztMf6a8f8G8cqMP2N8E/Yfu5/R/cfuh0z7n1a4wQV2P4r3g7sf
o2tful822uv9eZG+Jd37Yxv8gQs867v1flDLi/a+sfeHef9oSje/99d5P573
o3z9NPv7bfb3Un/v2eIVnmF/fymwv5/4/1v/3+T/iz77Tv+/zH3/9/uY329f
2O9z8X0k9/nIzwN+voj+/H0/f3r/9/0+Xn9WON6Po73d+2f6f1rmvPeU7vtr
d15wy/tt8hbvcO48w6/OufPzIn/ufDTfbzhfLL1+587D4XyqlN/zTTLnE6X2
Zc4vaXHqb5xPgQfnqbw5TyaVnzmfIrUvd55F1B/x/vHgfCvOt0jle56A8dA9
D8nzD3Lx4n2/NH+8vsX4eL4R8eRT/4zXnYkX7/k8qb/GZ8+dt2J+44F7/ozn
g3ySn/jiLempf8anNv698aUtz3jOtt94zp53kYlPPYjPb33Gu7Z848F/dTae
rvH5jedrPHHjxxtf2f5n4hUP4o137TO+brY82xPvf5n4xYPzAox3PCY93v+M
T0y8fOPFDsaDeOPZeLfGfzb+rPGg4/lk/PZcfN9FP3+ab+O/vql/MB7GLzfe
qPNvfFCfP8afNJ50Ln5mjDfxibPxpYlfOoh3Snzp1vYbL/Wra28uXqrxol/k
L0j/JJ14l4N04tfm2jOIX+rzzXijxoPOxbM0frbxQI1POe/nb+1PzGcu3qbx
MYmXnebL+GzGe3U9GE/NeLO5+JDx/d35N55bLl6s8U+tz/JW5P8k3fiNxgs2
3uNXV14u/p3xGk2P+42M35yLh0e8v0H8XeMDGi/2k3TjFxovL9ZTLh6h8XSX
5P/qbHw44zc6H7n4bsYLNL4l14+83vi6xJMzXlr6vJOJF9e+q894csafM56s
8eaMf2f8QuPlGe8y5tt4Wa7PXHww4ocZP7K1fK8nHtggHqjXG9/LeGbGC+we
g3iUufhkxuv7etNe44mOsfEajecY6yP+H2X8NPKn9R75jTe16ucfxJMk3tcg
fh3xBVvbZ/wt44kZH8/4XcaLW2HrM96W8f6Mv0V8wrT+GF/HLxtPyfhOxuez
Pcb7Ih7ioD3WZzywL9KNj2V8OOJDDcbP+o2fZbw4/99qfKrix8tP8YCIlzSI
r2T8rwK/yG/8I+MjGW/M+HvGjzIemfHFjD9l/K54sF5SfuNNGQ+M+FNpfdCf
dH33aJ1P+uP4p/QXJp7TIH7XVz//IH4R8Y0G8XyMR2R9BTZ+kvHIjN9j/cYf
Mh6a8Yfi+14uvpDlES9lED/lhY0nZHwp4+04fpZvvBvj4Rhvyfg9xKsZxHcy
vk08GO+Ubnwa4zEZP8f6vkg3XpHldQ/XW8o/7+cfxJMxnpDxscxPPJhBvJ4C
075B/BjLi/UXNr/xXow3Y/wl47sY78bft7ze/hsfx3g6xm+KRzjWc3iPjQdk
vBriBw1+7zI+l/GHXuS/Y+MdGa/lio3HY7yYOelfpBt/xvg0J2w8H+I7/ez4
OP4+2D0cb+P7ZMfHeDfE3xnEW5mT3/pf5Dd+ifGHnqQbP8V0480Yj8V4ROO+
jUcziGfj77dv4tsM4rXw+25a37n4PMbXKXB8/s/Fe5lj49UYf8Z4IKN+uvFR
jJ8yiB9i/V5vvBPjocT3rdzv2cZzMT5JwfXGZ7I9xqfx9+937TX+CfFZBvEe
jFczx8brMT6H8V1G2PgexN8YxC8xvkY8cvEujJfh/QQv0m2P8VTi+ZiL12E8
F+OlGH9j3k8fxDMw/gHxFQbxIIwHY3wRy7c84xUYj8J4OMbPGPXTB/EfjK9g
/AjjhRgvwvKMj1Fg4z8Yb8J4HeaP9ZHZ3z/Yv298hXi+5OIBvNvfb7wD4g8M
yjPegfv5x30P9qcbT8F4FsZvMN5DgY1n4P00xk/weuNlsL9+sL/d/enu14/1
aTwT9vM6Ptn958ZTGGH3zxtfwPgFxhNwPz/789P85653P77xG9zf7f5m9x+7
vzv+35fbb+5+cfe/x/Mjd7/UB/b+KffPF3iM3d9ufAD3l4+w+/ndn/9u/7H7
jd3/7X5m918zHoP9x+6Pnvfd2h72aw/2Y4+x+9Pdn+3+d/eLux/d/fPuZy+w
+9ftf2Y/enZ/7wu7f9j9we7HNr/7ged9D/YPux/Y/c0Fdv+y+6vdD+7+bvdD
u3/a/df23/3ntneM3d/t/l33o7o/2P2u7pd2P7Pp3h/pfl73466w+4Xdj+x+
Uvc/ul/S/aRz7H5L92+6v9f9lN7P6X5W9+e639f9nO5/dH+j+/Pc/+f+wDl2
P6L7Id3/6P2m7n90/6D5C+x+xi7d/XWD+1tz++ncb+j+M/fDud/O/XDW5344
7f7COXa/nPsF3a/l/q4Cu99sg+fY/Wrul3O/menuv3P/XPQ3t18tk57d/+X+
sPuP5x/sl8rtN3M/lvuv4vXG+58LvOjXl3zE7pdyf9WZdPdbmT/G2/1Rcf2O
/HvSY37j/uxo3wpH+pH0KD/K2+Id+aO+2D91w9H/qC/Wb1y/xUfyx/VRntfv
ya8b8kf74v5094vFeEd90b4oz/1k7k/b4Cg/7neP9RnXR3+tLxz3y1i+4x3l
e7373aK+qD/mL65vyH8lPcY3rnf/XIXj82N3f3/qf5RH+1rzR3+jvgbH65f7
/3LXV/hBfsu/k74jfY3dP7jFNflj/qL86H/sNzySbvkNjvmwf1FerO8oz/bF
+1NcfyX/Ce9xjHeUV+Ed+XPtD8d8Rvsv+IZjPnL7N3Pp7t+M/NG+aG98Ho7r
Y77i+pL8G1zhmJ+4PsY76j/hA475cryivDP5vT7mP9pT4zWOz/fOZ268HI8V
tr0L0q+kx3qL+jZ4i2vsfl3Lq3DMd7TH/b/u54314H5cxydc4lgP7r+N9Cgv
6luSHs8H64/81r/A7keO/ub2H5t/jRtcYvZvpfELx/Mxt785+h/lxfjF9Sfy
u7/Z/dYrXOBYj+53jvJupDteNb6TvyHd8XK/9Z78FbY/tu+Mjzi3/9v5jPR5
Pz29n8f+uxgP59v921Hek/QbjvWQG78ldn86+9nT/++i/CuO8Xa/fLigPve/
O7623/Y2pJc4yovyY/zdn2/7w7FeorwVjvmJ/ZC58QjnxiMc34+jfbH+XB/h
LY7nj+vT+bQ+xzc8x9G/6G/0x/VgfIDwGRvv4EL6CVsf8Q/S+ET+mvQ1djxi
vcT1xk9Y9p2ev7E/c0F+04m3MIjHUOD4f5fPh7h+Tn7jMcz66YP4EA98xTHe
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
HN6kX7HxRe54jw/Y+BwFNv6F8WUiv/E4jDcSnr/Jb/wJ4594nvuddM+br7Hp
nldvPAPPn3f/9hUbL8B4C5437376WD+5/c4NvpD/g/T4PO3+qdh/5/5V93sW
OPp/Id39beExdv+g+73i+9414xPeY/cDuf/N/VPx/4PcfhH317ifx/0i7ncJ
5+6Pn+MJ9n5o9x94v7n3t3tebIGjf7n7oePB/cHeL92SP3lH/ob8mfNU21z+
+P6Zu1816s+d/+j9oDH+X/382fv7PN8vfu/M3Z/m/XUFnuKuvHT/Uazv3P0u
nq/n/TbRvtx5XlFf5n6T9Hu59yuR3/s/LC97/4S/70f+3O/Xpvv7vL+Xe16V
v2/7+3u054ffb38/9ffg7O+xMR9hf/+M+cj9XsbvY6k8nP29p3uk3xf8vSYe
/P89+/9v47XHI/f/3Pj+x/9rjW89iAee+3+a/4/y/y0rPMIF9vuo39fi+2Tu
+8wMx+eZ3OdvP69He/8+43i9X+Bl5wYbX9J4iiU+kT/qj8+zB/JHenweXWLj
pZ2w8fiMh2K8kQk2vpWfN3x/d7+d+83i8cS+H6b75bvnW+79wNdfX28jHY8y
99Ok9B9Ix6Of+vrQPTwPwd9X/H0h/f870nPPR59vft91fft9z/XpenS9RXqs
ryJj4/n5/cPvP5Een9+Mfxfpfh9xPRtfws+3K+z+Vter+5ndj8d+xsHnP/ev
dY+Wz3cj94Pk9l/F71ex/r+6/H7+yd2P7P3Li4zj+eL9rS/M/azp80ykcz7q
4Pnm+Z537HmCntfn/VTvzovzPCzze35drB/uz/nJ9zN5f5X1f5Du/Vnej3XC
ni/3wtyfNDj/zvuR7qQP7kfC3E81ON/M89O838r7bebY87I8PyxzPpf3q2TP
G/K8IM8z8n4C7wfxfgbvJ/D3aM4fGpxPM8fxeThcYH8/H2HPN+H3v1Q/v4dl
f78psL9X+PuLv38YL9948P6/2//P+/9pPx/y/9o25rOLv97G+8mfdI7Xk/9E
evf+2Mb6+0XnmP8//fY///nfHtfXr377+OMuPdZT937a/i5e8ff8sf4q6mu+
fS/nz17f8/F+2Yb/PPl7/rqrf9OvL/K3xvetSY/83f+n2kiP+DvGy/mT735x
3nnyb/qfv7516+fbL7/9+rft/N//8r29P3Tjwet3273ffQt73uFv+DzWOfLH
+KTzFjmPsvX1bfR9/P4X5aX83fh8w94P+Qp3r++veL79Xz7f/Vl3fazXX3T9
4/eZF7+3fIvPc3+a/NvxW39189+171v3+v7i/Tj8yrw/p/75et359Vfdevs/
z/54df1N4/8b3t/+8NV3zOeyc3y//eNvv10O//z/vpf/q9/FY4r18v1vjNcP
Kf37Ogp3z5fUnhhv3o9f4VgvvL58616fWl6fWuYnnh8vfm96Mb/fsL8vvZjf
9H31F8nf+/9Hr1//++d7rN9f8f/deP7G+kvfz+L5w/P1G9+fXj90/YvPn9Ge
+DwS3yeq5F93r1/f5zG+X0T5r2//H+rU2aA=
     "], {{{
        EdgeForm[], 
        RGBColor[0.237736, 0.340215, 0.575113], 
        GraphicsGroupBox[{
          
          PolygonBox[{{4467, 2900, 4232}, {4041, 2900, 4441}, {4441, 2900, 
           2180}, {4482, 2900, 4481}, {4481, 2900, 4467}, {4232, 2900, 
           4041}}]}]}, {
        EdgeForm[], 
        RGBColor[0.254218052631579, 0.34900515789473685`, 0.5490325263157894], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxdlD9rU2EUxq863KDD7f0IriL9CKl7RYqgRUeXZkpSbLE2QRwchA5dajII
ydKOVrClbZpEgk4ZHJLSJEgztoFA6BBJAxLieXh/pReHh/O+557znuf8u/df
pZ4mb3uet2G4Y/jpe967mOflTW4bDg37hk+GhOGzYcUwb8gYaoHnVQy/DFm7
PzM8NqTwyeCzaTjifMQ3yUrEbseQQy/7MnILDh9nPK9ucd7H3PviMGfYM903
k4/uOZQDp5uDc4r35zmL47q98dawGjr+iyaTpo8blnx3XiJ+gvsmHMW3ZNgl
7h75b8y4euwSX3zFYYE3EpzjIInuu9l+DZxvOnTnVOjqqVouE69OfXLwkE7x
f5D7S/NpmO+ayanpPlh+t2JO6j4hVg2u4ndKHk/Mv2fnK/z+mnxh7zygXqqV
+OSZD32TjfrxHM7i/vuu85H9se/mKU8Oq5GzZJYab1Hbbfqse9pQNBToWYK6
7wcu1y++y0G9Vk5p5lK10XycMi853knjvxOZyQRxC3BLk6v4z6IrwHWBWXtI
nAyx1qmLarJG/d+E7p1Z+telDqpHy9AwnJNrgzkv8D1PX88MJ3CvRnzLEZ+m
73albxgZxrxTxP7C0MZOb3TQ617BtwGPQ/9m3673vQIX1fLAv5l3yQP4VZnL
KvcOPC+J30I26Yf2Qj3TXGrW/pBrCa5dOHaI30Sf+y9OHZ8Sdm34t/BZZK9X
Qtc79S1OnYa+m90B8XvoRnC95K6z9qKDTYd7F84D9Gf0YAC/Inw1o5pV7WeW
WdFc1Nj3Cv8I1eN16HZJc6H51f+kwZ6eROLru+zEr8wuaCf61OCCPJSf9l11
Vo5TOI7JeYzdBN79iH4a6Us74jeJfLuK5N677kng4g6x1Vn/kiE1PUe2OI94
W5yXQ5eHavYP7fciUw==
           "]], 
          
          PolygonBox[{{4470, 4045, 4028, 4469}, {4468, 4028, 4015, 4438}, {
           4463, 4015, 4030, 4440}, {4440, 4030, 4027, 4466}, {4467, 4027, 
           4235, 4481}, {4473, 4235, 4049, 4442}, {4471, 4049, 4045, 4470}, {
           4466, 4027, 4020, 4465}}], 
          PolygonBox[{{4483, 4482, 4481, 4235, 4473}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.26727173684210526`, 0.42872357894736834`, 0.3729537894736844], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
9oS8k6NqjP3/AWkL7PQ=
           "]], 
          
          PolygonBox[{{4463, 1998, 1964, 4464}, {4439, 2020, 2033, 4469}, {
           4435, 1569, 1521, 4434}, {4472, 2048, 4238, 4442}, {4468, 1997, 
           2020, 4439}, {4471, 2033, 2048, 4472}, {4464, 1964, 1997, 
           4438}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.31119399999999997`, 0.48951342105263157`, 0.26673873684210525`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
lfnPYgEsgbmzWfIn5yb2PovF2grtXGV/YS/RXX7sY3/zU/PiDnOU/WqNvWV5
j7RGpblcJd9S54HZKWJ7lutRG35k7sLTJL7b9Tf6UBuXWx9f8P1x49bqPedk
9ma3RuxeDn2LCskX2JmJdTBKDfpWIdV+zrr7HRstxmo8s1JLsX2YMZ1amr73
891/tnm6WP+czJKPLrTuslfjnMo5nPPWL7O0n7k36H8jZj3iejKufw7aGHj+
XVz/PWi375jHfpi55MKV5gN7bs6Y/YL+Co6CvpGlWH8oDsfAF1Rn/oCt8UHz
gu/KoO8GvRzP+4uTDgeDzgQdc/1OdTjm+w+L07cL9np8UxmIT9X/xvDJ/PDJ
TaUJGy8Zv5IY/wCsy/uJa6HvgaA3lPtl0CHfdQT93vdHXR990XthUM9Cyl3O
vkusG5vEx07znTH29p9m6Qyz03FiXmrcM8eJeYe5Sr4tFk+/Nd+Pi60LjSc5
hQ6XOv9S9eEM/0jwPZ9P+VpjHvwi6O+M13h7Xqn42yoveXtcjJ51D/ALsb7S
e94tVq+ntPmI661R11brRLNjrHORtaVCvHBue97xZv213boyszT1VHIRG9+z
ToKTT4wb/QwcHNRXldYV9P81tSwwe4f1mTpNDlPLkQt+e4lhcok6Se8+GPfP
e07YbU1ln/Sctfo9qac+p/6Ns4b+Qf498hxUDnWD8QuKU52kRo4xD7jeElRW
nOJLHemln2/IJZ73zSWeeX93aTrj0qPZF5XaN84vTjWGGIORMvOuRFtzxcnX
8PaTH5/Q5/ALNYOz7aEs+eUd85e+8GqWsPlrx+Gba18kl4k18sEPtn+q/ef0
CX3wiDzwgvmD8oGN08rvaY1g3XZrZl/zpNT8OGRtQ1/q6v/IR7xO29uOywMv
dvTSdmJwwlp+pT5h7FXnIuO487D1A/3T5LXNegJmDqtDh72VvJ3iWfGYOqEb
8TgifsDRs2IKnPC7+1HnH7VX7tIvI+0D78b9S74/oQ3E9jnxTq71N7/Y+5GP
75hXE8x1cr5V/oesK4t93mnekX/gC/xRM+BhL0K/rpdnp3Vuibn/jvn/ojlM
HaFX06cf8d0sc/DJklRXRrvP5Jso34fpdytcg9o4vTThBpuQU6WsrdZz6jq9
fJq2zHCfQ19c43vkEf8rfP+Icuj79Nhm121Sj///nSefcqKfvv2jNe5b4o6a
zD6NfLu+ONUm1mWvAO4/UL8yc+64OAEj9GQwPdCag6/7ue/Ch/3F4Snz+Xzr
Q7k1ghozyRqCXuWOV+orfJYXA/itKwbNxol4sbda2nUmy6W4LXVsobhmv1Pu
vgS7i6wlXfu3leJmkzFZary3KuMmdSh1z9hXWRdal8YbC+ZT+/+rOO0/6MVj
w47J1JWgj4pTv95lXTpszSFH+H+V7VnKX2rQ0qDHsnQmo97e5B7g5rjuMNc4
7+LvifryO97304+3WMfG6WPqNXsg9kJfxXV9UKN7mFfNR/ISGezbG4xTnXz3
BT0T1OK77cpoLk49bF1QTdA233Fm5ezKN/Xvh97jo3fNK016LQpaWJzsHavN
ZeJhivdTrPUV3teJ0wnaOl4bkfOutaTDuv6u98+o9+PFqXdS/1bp9zPhh3VZ
kn2/8sfJX+s69+qLGm2aL93r+EJ1R5ctWYoZvZb9Iv18UJbkjTM2tdoySRnr
lP+EOjDeLiboAwOVPda4DclS7CbpowvM2/nqg53s836v34gfeUtdPmadXqTf
unKwVnnEss3YPK8tYG+HPQTM3a3fiOku+dcb88eKE/bZS9Y5v1UfLdJWdNsc
9JB4Zm/LfrhVWS9k6Ww4tzTlAL5dHbQmS3v7iaUJd/jrkD5tMGZjxOkix7d3
YaZnijk2bVDeXPka1Z9vLRPcx9V55fv7Yb8J8Btcnd85+X8p7vmfBM7ixH2e
9taqCzmyXH9zLtmmb/Y73mCsnlDH+8XBOv2zKebUB63NEtYXaCvvNlkXdqk7
dlJX8ONh4uk8eCu8zvW60vvF5sE6Y8S5aIM+aTMe5Mhq412jzFptbFF3rpxt
jhnnVuVU+72q0zXrXLfO58fckxAb4vKGcSf+NWJpm/64V3z/Un+Cg8f14QLH
muUlDlu0bZV2cq5ZoF+ZR63lfwSpt6vVF/tXyTtPHfHzc17Xek+u1bgm5y78
Xp4lGqO/52TpN/pJQddkqQZwPgOvnMXoA72sD5+YE5wzu85mHfq0qjT9ZsD3
nDZjS4znWUvfEAOHlEmvQSf6DWffq7N0jhydpfjdnCWeAVk6OzLOWbk6S7Hb
YF5wHhwiH3aUWc9YZ5d4w94+2swa9DrWHCo//6cwUdn4YHCWzpy99Ue7Puit
fozTQ3jPuXWu34j4VtSp3fi66wzP2Rm59+nvOd6vEWNjxds2cw7ZFeKXPGgR
s5yB5+qzCrFVrV8eFv/8tgUmvqvcYVna+3EOG+t6jPO7Br67Tlwc1l+71bnV
nDlqzNZp6wF1pD7gR2J7vfF9XEyAhw+dd1R7ToqfavW+T354n5GvK0d3qU+b
4y3yHNDnfzXuPY09v1PxmxW/VV1rPMuM6UCxQx+Cn98/mQ9GOsQ4uvaR/xrn
gJmPfD9WDF6oP9lH49NJ4uMa/T1A3jJls8Z8cdmVZ4PMtaHiie8p2EC//LN5
TU2gznSUpLgSU+oYdZd+fKf7FGoeNZE57BWofXf7jn5MX6ZurDMGXd9Yzojt
FWKQWHAm7/C30Wbr2cvWoM36Hjt76Z8x5miNvvrAvL7Z/CBPsKdEvwyWf4x+
+Ia+YLyz+OtvQ+Viu1q9uvKReX30G74tE78D9P0Q8UCcr3b+RHOowvlj1LdW
WR8Z/6Hq21t90LtTXw2Wl298/H8p/2c6J/u6XsI7wPUnixHW+z8CT80Z
           "]], 
          
          PolygonBox[{{4423, 1415, 1376, 4457}, {4433, 1476, 1531, 4434}, {
           4457, 1376, 1430, 4458}, {4424, 1417, 2137, 4429}, {4460, 1415, 
           1469, 4461}, {4425, 1484, 1541, 4447}, {4459, 1469, 1415, 4423}, {
           4462, 1479, 1451, 4428}, {4458, 1430, 1469, 4459}, {4448, 1499, 
           1458, 4449}, {4450, 2621, 2625, 4431}, {4437, 1754, 1693, 4436}, {
           4428, 1451, 1415, 4460}, {4427, 4204, 4206, 4432}, {4447, 1541, 
           1499, 4448}, {4461, 1469, 1479, 4462}, {4449, 1458, 1484, 
           4425}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.46028284210526293`, 0.5801780526315787, 0.2465517894736842], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
fCfcIGdXwaudPFtHnv8fvUVrbQ==
           "]], 
          PolygonBox[{{4419, 1170, 1161, 4418}, {4445, 1232, 1249, 4446}, {
           4451, 1443, 1444, 4452}, {4426, 1432, 1393, 4422}, {4422, 1393, 
           4272, 4480}, {4427, 1444, 1432, 4426}, {4403, 66, 4454, 4455}, {
           4453, 1445, 1407, 4431}, {4444, 1221, 1232, 4445}, {4450, 1407, 
           1443, 4451}, {4479, 4179, 4181, 4420}}]}]}, {
        EdgeForm[], 
        RGBColor[0.6743836315789473, 0.6977730526315788, 0.2746017894736842], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNl1tI1ncYx199/28MttK/FJmENQjfdNXSlo1K0rKDEQULK0E7XWTb1BiL
0U11pXZRmh236qKrsV3oyESoVzaCyI43yzUIO+yuA0gXKzqyfb/7fV7WxZf/
7/icn+f3/D/evuuLttxEIvFDTiKR1LdHk6PCDmF8lEi81GK5vhuFZqFWOK61
K8JZ4WuhnfFNoU84IfwkdAgnhTW6kxYahFuaf89+C+d9ZnYUzvnMLGGCMC8K
tIah/VpIau0TIRWFtbdCrsav9L0qLNO4MQoyVwhNyN6rvWPCdeGrZJhbjxzt
PdP35/xAw7TK4G1dN8MvCQ/L9QeyWIY5wjuNO/U9L5wWNqHDPGzVi72s405h
q1CteSyUCi80z0klEg/0naL5UqGY72qhSCgQCoUaYUD4UbiWDD45HAX+Z+Fz
Qxhh/6jpw9u2sqyWOS8Kupfi4/msee9OMozHCRH6Wm/z/RLe1+HVi3/e4qNB
YsKyTJNOz3Vv1YTA13T/Sga72jZZf75G1hHkvYqvzM+8HYf2y23O++wr+L2D
5knoO77KOO97y4gF67iDuXVu0/yM8At3foJGLXFuv6/Q/Fvi+zDrHcRUB3FV
lx/o2ZZ7osCjCz87lg8IW4iJnijI2ofst5DZdr6OrhHjY8zz8Mc78rAMvR5i
n2vE7n8xPD7ceUh8vsXvjtPP8K3Hb/BfRJ7Nws9/kpu3iJlhYqmCHLDN09yP
mI/gr2HuvMX3N1h7jTzX2E+T575zm3xLw99y9OHPO9goRX6NIz7nR//Hivk7
vpKKs3v63iePnE8ZYYw1712MwlmPXwlXHM/CUBTyblS4INwVDonGBmF/Kpzp
eS+vTzNfJ951yRBHS/nuS4Z4WJsf4iAD//PIkoHvMHExAL0hxpbhpZBIhfx/
nhvqwTmttRNXlqtGKE8FHr2s+8wpzl1g7vXCVLCPz09KBftUpII9TnFuVTLU
o93UF89bhX7sZZktRwE6rxSWkOd5olUqLE6FerYKGmuFyZydiT3L+Tahw95k
eAN8ZgX0lpBrHdhrJvK7lmxA5u4onLFdOznTCO02ZOzEL+vwzTA2fsB507Od
7Z/p2KUFuVdCowY7VLBflgo2qkbue9g3Qp9CdHSdjrmfreOu4Xfx7yj2XMde
L3FnvzUSd9blG6FemIucQ+hs/qXYt5ea45jzPB/5L+K7fuLJ+o4S+5bX8fgC
mvfJj3PkiDENu+fBe4w46IDmBfTwnQJ0tc0eQNO0t5Dbm7j7Cjr3kMHzPGKn
DBs2EU+l2LMG387EFlvIvwPotYi9XOyUwI/V+LI3P+zZ7vuhVY+fkty9Rw0p
RN8I/vXsL0K+6ezXszYXvgnoR9Ao5XzOe3emY8eIue2wlJys4PuA+uW3cTN2
6yQGXZcbyW/nwSH1axnhoNAm9AhdjOuEFqFbog0K/Ykw9/pi4Y3m/wgjQqvm
tewVC+mcsDdJmCjMjgPNFni1wqOLsb+7hN+hZ36r2fN6XyLseb0yDjL1Mx9h
/IYzC7RfFQf+lmOJxh+pBj7JCXs+Y3p+a/3mudbav334+FOdmar9GdAsRpdK
0UjnBlpDyNwD2tDLe+VClfBU80dCUW6Q9zvbT1goPgvyA+8S6FlG0y+Ch/1y
Ad+MYmfr1CzUfyjfxsHeJdh8Nfa3vZqTgYff8RHumkYJZ4q5U4IfR7Gfz76k
htTGoYaupBakuVeL30ewdQn6Woc67JCVwTpajsfauyxkhHW6s16Ynwjv0mPe
prXk2mTeq2Jq3d+cGRCSHwS/2D9L8I/p+D+jB/rbhd22N9jKWkMi3DHv5Zpv
E2risN/Df8p6zphmFWs+d56eyL2Re9Bz1CzXNs89tsyW9xn3quBdBj3LeoR/
IttiBrnh/amMvVbI+zjG2QznDfMw/fY4xI7tW4CNxuDrO0ewcwv6pvGbY8Q2
nAjPfXGo+2uJlYXE5FZsl7XLEexwEzme4ZMMfunm28PZy5ydBJ+J+Prye/72
Nyt7AfN5xLZldPw5DvfH4a2+yHsxlhPyKsavlvXz3NCXukf1P5HHKeaue2d4
u92zu393n72TfffWc7jju+4x3fu6J3bP7n+84/Q07uv9L9rAe+Q3xP2s+/da
4D7Va2XUV/e87uddc5cx38g9j917+uwE7rpmuy/1v5H/YQbpf0/Av4+e9izr
3t9Lnrrv6aCvsa3a0eE4vVCGd9/9s/vqK+iyhXewnbOmne1T3RedgPYgfdlu
7OCYcW408654zf8/G3nf/Z9jW9fRxzah8wZkPIWcA/D3e9zF27SHnsD55T7i
JHxbsEUf4z3YdQe6uWc4Da9u5Oigb8jQb5iH494+9v+R/0Vdcx9Rv91DtqPz
Xr7m6frdzfszRN13za+OQyw6Dgc54/flkvZ+4504SC3/VVgah/hbFgfsRH/n
iWPfOeDatI18GuKe434rsWsalvcJMrfwvmTrm9+RSmqhZbOM3m/gTCU1ahs5
VI78Me9WETW9CjrL+W7DTml4ZHjjLJ9zcwg5y6Hr+7OIpTR5UU4MOA7XZPOU
M5vJ2Tr6lUZiwTFhX/WSk5uJr05olZNjncSic76bOMj2+xug00qs+twT5Pdb
ewlfDbH2FL0O8vX6Ku6axiN86ruL6N/m8j9ygvh0bz4FfTLUSNdK04l58/4F
qEtQpQ==
           "]], 
          PolygonBox[{{4479, 1242, 1197, 4478}}]}]}, {
        EdgeForm[], 
        RGBColor[0.8335094210526315, 0.7551613684210526, 0.3108594736842105], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlktInFcYhv+ZkRIDRodkagVH7EJLAkoa8IIaLWhqdgEXgkI2qTAq0obY
nXbXNAPjpdSuItmUIkgkxEyG6EBWIaWULpQuuokFaWMklxLS0qYRQt+X8wzO
4uXcvvNdz/f+//uXPhv6NB5FUSoWRQmNTTVRtCK0VEVRtzbqhUvCXxK6I+wJ
x7XuEY4J1UKn0CtUse/z5/Gw7/O/Nb8r/Ck8iQddNdp/pjGtMSW8i2wfes8K
JxJB3rK1nO/Gg+5e7p0TXmh9UmMSPfbRsu8lgk3v2/59fDiGnwPCEa3bhNZ4
sGef/hDy8aB3Px7i6udOb1XIyat4GKuYW9Y+nsSvTnJwgljS6PbZY3KTIm8f
E1sv/u7j8zDxpcmDfdoUWoTTwqiwpLMV4Uvi8TghXNZZFplWYrxou0Ile5a9
kgg6ZrHnuzOJUPuMcE1yY8IcuqxzWrghLDDvRN9HySj6WuPnZWcL2LXOb4Rx
4Vvs2dYC8paxLfs9wjvZ5M1ZZ5H65Tlzvq+gb4najBPPAKPja8EP688Ql9/z
r/Hwxkt1HKkK+5fxYx6/Wrk7i9+TvM8B6tpNvmz7PrVzDX8h3rxQVG/tCL8L
Te6hWHh3zucAMediQW5TeBQLMmvsFbhfYG8HuSI6H6HPd2z3R2xPkIMV8nCR
dzBDbS3zFF3W81rr34SXQnM87FUSi/dfI+/9vmTQdYT3mEfGspXctZ8ZcmBb
N/FtCX9Gqc205JaFeeEHnR0I/9Cbzn8T+l9io4k37HivC58IWe4vE88I79a1
XCOf9mccP5bIzzB1nGAcoMbDvNFq+MS8002dzQUPtF5nf5I+HeYNFHkH/fBD
N709Ta+n6GnfcV9Z1wbv3Pfvwnm2az57AR/sw322+5g+qOV8FE4Y4I551Dpa
yZVzdpM6uAYfxkONK7FlTt5j7X72eYmzzGEdNaE/3Cd+/94zT94TbuOPx2fM
+8mV+7KeHDgXzzlPcV56F+twzFfE5/F7YTwZ+tT9mlb9/tU3qlZjnfBW8zfC
qpATrjLeErLIWf4/4SGj1/WxcNaTDH3n9zcuTOnsgpCJwhv8oCK8w60o2DoQ
GrDbHAv2vsP+O0K1cBy5t8h2JMP9A2zb322hgK++az/sj/3bQsb3W7V/RmMa
+S1iK3DP65/RV8rBBHkoIOs996r70fVeRb50d5UY7Jtzats58uG+aqgJ/wRf
JIMf9qcxCtyTg5P8JvzP0MG/g7+RrplzkRKOCjPJoGc2GfariWuZ/FuX+ztW
EXimqiJwieeb9HWOfs/CgyN8i3ux77Xn9q9NOBUFe7bbgF+v4P2j1My+TOKD
+eM0OXfuT+F/I3F3MV8j7usgR67ekNdtdFrfnNCSDPZSxNyI3UJZTCn2fOY7
U7FDv9qph/1NkLuf4Enz5Ta1dA39DW7l23WD72XpG2t+WaRn1+mvdfhnDtks
391hOOps2TfVvVxEj3W63pnE4XfT3DMCfy0il0Vv6X8hDz/Ow813+P7NI5tl
7v1euHga/jzHeo9zc2Y1nNoHt+yW8eM6sT5B3hx3ixq5L/PwdJGYs8hdIx8b
4AF675Gz28hsIL8Ld24Q5zS6HlIT12ZIGIRbzE1TzF3j89S4h5pPMT/P+gy8
VHp/XbzvNDI9vD+/kf5YsDMGFwxi2zra4b165NqZt3G/Hx3tzEv9fDUZ8raI
74Poc6/0l+lYJK4stnPMM/g/xP4YHDXIOlMm57VjSuNHM3xbxzodO+T1NN+B
C+SjC7+GsNfMeSmv7fSTv3E7/BPUodMy/wNK3pCx
           "]], 
          PolygonBox[{{4477, 4133, 3373, 4456}}]}]}, {
        EdgeForm[], 
        RGBColor[0.8539025789473684, 0.6528104210526315, 0.3182613157894737], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlT9IW2EUxd9LUpHSal6tEEhbaN2iEVsSaKqTsUjXLrUYKqaCurRkr1Aw
aWPsGHBzkIBQBQtVpwxd3LraJ+ig6JTiUro42Xv4fg86HPK+P/fec+8998vD
8vuX72Ke57UNcUPZ97w3hs+G13YwZBgDA4YpQ9rOHhvGDTlbxwwvDHHuDbHW
/qChaPANGcNdbOVDZ6+4O8p+ynd3Uqwje927Mn5/DWOB593z3Xe/7zjNEXvV
UDHU5DNw55d272ng/BYCt+7/z15c8oYJs0nAfxq+M3wvwiPDWt895CWOl3D7
YZgxNAw1wxOLV7TfrOEm/kfgKs6qcY4alMizRg6r7Olbvg/wr/Mdwz48FrGr
4EffBfJ9FrierhnqvrPV/YbhkeHa9vqSLs4UXK6IpZgjZl+w30nP2dXw/wn+
spEO5g1vDVXqo7pViTVNvB3sox6rJzl01WXYNOxhVyL/Fr422dfvCvdKnIuL
NCG+0oVqtG7I2953W28ZmuwfcCYfIX5y5DGADsVv2Hf9yhpuaEDgqDvyKx/L
nstdOi1Txwx1XSXXb+hkkHlIMifS2Dp8Ngw/+dVa8zcKhzL+tZfELkGMDPob
5Tyaq3H03IKHOHyhX6qV8jr2nR/15BQtbaBZaVe5HvqO8xmxE9xpUMMJtBxp
OovvPBykB+11U8MGeqjS0xX6ect8pQwBvmeorWyOfMdVvfpjOEfjFfovbl8N
vwwPkq4HHwK39qi19hUvTX/SrLW/ApcENQl9x0Pm4qW52TVsM0NbrKWrI9Yh
65ahlzzSICA38b5tD2wn5u42ub/GW7vFeztBj1WjNv1po9PIxzm1eE6tirzb
deZwjj2dRfbqseLMEnuSO7o7T7+it38WTnP4kCbiaF/vlmqs2qmOe8zROXGq
cF1GIw3819HDBVo7ZT720eeJ7/rdzfcRa51fcCek1+p5Bh7i0IRzg5o2+T6h
b7v4O+E7S+5613apvc7FvwO338RUbGkpjtba5Kp7MTQirYToeSFw9j1xZ+tR
N9n3M5d6o0rMot6d+2hlOHAzUqXvKf43dFbkDdG8l+mPtNNFjEM0eEwuZ8x3
SB2Pec964Std9qFHaSrOvs478FceLWouP3eYr2tihcSrw2UbXk1q+hHbaC6U
h3JdClytpKEFvpf4n0mTs95k5RZD50X+S1XHJL3ogb/yaNFzxSxwXxr/BzuW
7UU=
           "]], 
          
          PolygonBox[{{4414, 283, 277, 4411}, {4476, 4115, 4114, 4475}, {4410,
            276, 283, 4414}, {4398, 27, 57, 4400}}]}]}, {
        EdgeForm[], 
        RGBColor[0.777886157894737, 0.40109610526315853`, 0.2729335263157896], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlD9PU2EUxt97hclG7u1QGjYZmG5JNDEIJMrC6GIHWho0mLDWxalpWhIM
g2O3my6mTHXDuDgYYfMDUJIu0qVsfIZ6npxfY4cn933Pe/4+55z79MPHt804
hHBmeGT4FYXQMXxNQujat20YGgaGkeE7GC3Iz7EZoK97xbBtqBpuIvc743y5
cF+34JGhZufccGqYGsaGOHbo/CR26Cx9xb41XOBzjF/JviG/s3p+Gn4HP+v7
w/DJcGhoGu7R0XvD8N6wb7g29HnrkptyLNs9M1QMbwpe9wm1T+GlQ32XcNXm
vYuPI8NacF8JWDIUDSH2GiaRnyf4lE4BvRI20u8QR/5LyFaD81gl3gk9aZPP
kHMOT6fkNuQum4w8L+BTOseGuuELOU2wOSeGcrmGM/Eq/c0Fmzp+htjewtmA
/s3o7Q3zJ3/ieECNY3odMQdTZmRELV3yPSCfNjVkyA4WZAn8F5j93PAi9Ryr
5KnY8vPacMVMPBj+GpZN9jjyOdA8PDfbPc4b6hPzrz1YpS+9xPmQney3gttI
/1XqnO2kbiu7Fb476JdVc3D7fWw1sxXeV+C7TAzVt0ZOW8RZp+aYWXqgV7up
51dEvks+yks8iIM/9v7M7jX8FROfc/VK9WfsjvT0Jnkr9bNkM/Zifte7fCuu
Yn5OfS/lX3Ea1Kh7HR6qfOvUqh29on9Ci/3O+faBzj32u0HPG/hugbnsZeo8
l+E5I48z9HJ6MGUWNDd5+D8j9/C6TK6bzE+f90PyqfFtkluJ/mzQtwSZ5miJ
OZ6/zeW1+Z7jq8U8zHl6R/xjuOqxn/oPKv878tijpxk+t4mVEe+I3dGO/QN6
8K5M
           "]], 
          PolygonBox[{{4410, 230, 223, 4409}, {4409, 223, 229, 4408}}]}]}, {
        EdgeForm[], 
        RGBColor[0.72987, 0.23939900000000003`, 0.230961], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNky9vAkEQxZeWqiZwmFa35BymzSUYkupzTQUkdTSpacJV4KprECSU5EKC
4hsgQLQKUQRfoqeoQheF6LzsbxPEy+zOn7ezb2evnl4fshPn3KPh1FBUnYvN
jiPnDrb+s/Xe7Nr59c5QLnmr/Y+havszw8rWX4bccGf7Z0PHMDGugfm6zvPs
qBuTq5pbchuGesnXy7c5d25q9d/0o1joKfiUE3qsU9eAQ/tN5KH8txo1kY/1
6SH08mFYGj6xQ+dzD5ynsyslr4FyCvJkf49qVTc3bLG673vNayFtQ6zASj+t
ddeZ83otqJuDkfOxEXud8YLt8Xap2QTfkvvM4JrDGzgKeg39LXifDhpKvwpa
6r575kE5bc68x7bp5cbu2GKeNEeXzJLyUvJiek3oVbEO8TzyOSn+hJ5HR/fs
E2vBleAfct+MHL3pNT3ExHJiQbsBXH3qYnib+HrUrahdktOEW7jgDP0D6Vhm
Ruvop/lco7vu10WHPbOrudK7a62c8MfE1YBDXCFvAnJmqQuvfCnaap+ha9Aq
YZ/xPh1si7VmcMssNPHrPaf8X/GLe8zZM2ZBc/MPXsuRPA==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.72987, 0.239399, 0.230961], 
        GraphicsGroupBox[{
          PolygonBox[{{97, 106, 86}, {106, 97, 137}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{73, 86}]}, "32"], Annotation[#, 32, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{4474, 4296, 319, 4296}], 
          LineBox[{4484, 4242, 23}], 
          LineBox[{34, 55, 4401, 90, 110, 146}], 
          LineBox[{260, 300, 343}], 
          LineBox[{3016, 4086}]}, "30"], Annotation[#, 30, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{511, 4114}], 
          LineBox[{12, 24, 45, 4402, 69, 95, 131, 4405, 192}], 
          LineBox[{302, 280, 4408, 4409, 4410, 4414, 4411, 237}], 
          LineBox[{469, 512, 470}]}, "28"], Annotation[#, 28, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{3, 15, 29, 4398, 4400, 71, 100, 133}], 
          LineBox[{4475, 4476, 4126, 4477, 4456, 727}], 
          LineBox[{197, 249, 4412, 284}], 
          LineBox[{580, 560}], 
          LineBox[{601, 612}], 
          LineBox[{4126, 4123}]}, "26"], Annotation[#, 26, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{4397, 21, 42, 53}], 
          LineBox[{4485, 4151, 871, 4151, 3390, 3373}], 
          LineBox[{79, 108}], 
          LineBox[{181, 174, 4407, 251}], 
          LineBox[{441, 490, 4415, 550}], 
          LineBox[{691, 698, 656}], 
          LineBox[{691, 743}], 
          LineBox[{791, 809, 785}], 
          LineBox[{831, 838}], 
          LineBox[{874, 916, 970, 916}], 
          LineBox[{914, 872}], 
          LineBox[{968, 915}], 
          LineBox[{1008, 947}], 
          LineBox[{628, 4416, 568}]}, "24"], Annotation[#, 24, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{4174, 4478, 4479, 4420, 1272}], 
          LineBox[{4455, 4403, 2051, 4399, 36, 63, 89, 118, 4406, 178}], 
          LineBox[{330, 295, 4413, 220}], 
          LineBox[{444, 494, 529, 538, 581, 551}], 
          LineBox[{757, 793, 841, 834}], 
          LineBox[{972, 993, 982}], 
          LineBox[{972, 1029}], 
          LineBox[{1030, 1077, 1070}], 
          LineBox[{1203, 1179, 1169, 1160, 4419, 4418, 1120}], 
          LineBox[{1203, 1211, 1222, 1245, 1269}], 
          LineBox[{1223, 1247, 1301}], 
          LineBox[{1160, 1223}], 
          LineBox[{1311, 1280}], 
          LineBox[{1321, 1340, 1322, 1330}], 
          LineBox[{1366, 1373, 1321}], 
          LineBox[{1365, 1407}], 
          LineBox[{581, 4417, 658}]}, "22"], Annotation[#, 22, "Tooltip"]& ], 
       
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2391, 1057, 998, 1057, 1082}], 
          
          LineBox[{2379, 2391, 2461, 4444, 4445, 4446, 1319, 1305, 4421, 1279,
            1316, 1327}], 
          LineBox[{2391, 2539, 1411}], 
          LineBox[{4454, 66}], 
          
          LineBox[{4480, 4422, 4426, 4427, 4432, 1471, 1536, 1466, 4452, 4451,
            4450, 4431, 4453, 1491, 1466, 1467, 1528, 1467}], 
          LineBox[{154, 123, 4404, 68}], 
          LineBox[{154, 189, 226}], 
          LineBox[{408, 400}], 
          LineBox[{531, 543, 590, 615, 590, 595, 552}], 
          LineBox[{856, 887, 937}], 
          LineBox[{998, 978, 1024}], 
          LineBox[{1215, 1224, 1251}], 
          LineBox[{1216, 1266, 1288, 1332, 1395}], 
          LineBox[{1286, 1324, 1369, 1414, 1369}], 
          LineBox[{1305, 1338}], 
          LineBox[{1376, 1415, 1469, 1415}], 
          LineBox[{1420, 1461}], 
          LineBox[{1449, 1414}], 
          LineBox[{1376, 1430}], 
          LineBox[{1463, 2141, 1448}], 
          LineBox[{1469, 1479}], 
          LineBox[{1519, 1551, 1565, 1554}], 
          LineBox[{1519, 1473}], 
          LineBox[{1528, 1563, 1598}], 
          LineBox[{1472, 1529}], 
          LineBox[{1536, 1562, 1605, 1614}], 
          LineBox[{1616, 1550}], 
          LineBox[{1319, 2461}]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{733, 714, 726, 722, 713}], 
          LineBox[{2109, 623, 578, 541, 501, 458}], 
          LineBox[{4443, 2154, 2147, 2145}], 
          LineBox[{4218, 4436, 4437, 1782, 4280}], 
          LineBox[{4218, 4215, 3839}], 
          LineBox[{312, 274}], 
          LineBox[{500, 545, 592, 637, 666}], 
          LineBox[{773, 721}], 
          
          LineBox[{1043, 1049, 1087, 1140, 1148, 1133, 1184, 1227, 1259, 1318,
            1228, 1268, 1318, 1343, 1335, 1379, 1427, 1457, 1418, 4430, 1505, 
           1525, 1574}], 
          LineBox[{1087, 1042}], 
          LineBox[{1088, 1135, 1193}], 
          LineBox[{1218, 1254, 1300, 1344, 1294, 1278, 1229}], 
          
          LineBox[{1267, 1258, 1308, 1333, 1378, 1388, 1424, 4424, 4429, 1497,
            4433, 4434, 4435, 1557}], 
          LineBox[{1388, 1343}], 
          LineBox[{1380, 1418}], 
          LineBox[{1534, 1585, 1623, 1667, 1682, 1674}], 
          LineBox[{1739, 1750, 2164, 1738, 1784, 1812, 1814, 1811}], 
          LineBox[{1739, 2161, 1740}], 
          LineBox[{1771, 1821, 1828}], 
          LineBox[{1846, 1850, 1898, 1928, 1954}], 
          LineBox[{1843, 1883, 1888, 1880, 1925, 1937, 1926, 1948}], 
          LineBox[{2184, 2185}], 
          LineBox[{4457, 4423, 4459, 4458, 4457}], 
          LineBox[{4460, 4428, 4462, 4461, 4460}], 
          LineBox[{4425, 4449, 4448, 4447, 4425}]}, "18"], 
        Annotation[#, 18, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2743, 2778, 1834, 1838}], 
          LineBox[{4040, 2895}], 
          LineBox[{3928, 4228}], 
          
          LineBox[{4483, 4473, 4442, 4472, 4471, 4470, 4469, 4439, 4468, 4438,
            4464, 4463, 4440, 4466, 4465, 1965}], 
          
          LineBox[{1664, 1671, 1710, 1725, 1760, 1774, 1748, 1767, 1792, 1833,
            1840}], 
          LineBox[{1658, 1670}], 
          LineBox[{1745, 1708}], 
          LineBox[{1773, 1796}], 
          
          LineBox[{1855, 1836, 1854, 1895, 1940, 1956, 1975, 2005, 1975, 2021,
            2176, 2005, 1974, 1970}], 
          LineBox[{1829, 1859, 1887, 1939}], 
          LineBox[{1855, 1867, 1908, 1904, 1909, 1905, 1868}], 
          LineBox[{2570, 3744}]}, "16"], Annotation[#, 16, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{2180, 4441, 4041, 4232, 4467, 4481, 4482}]}, "14"], 
        Annotation[#, 14, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Bold, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
     FormBox["\"Topography\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.237736, 0.340215, 0.575113}}, {{0.254218052631579,
               0.34900515789473685`, 0.5490325263157895}}, {{
              0.26727173684210526`, 0.42872357894736834`, 
              0.3729537894736844}}, {{0.31119399999999997`, 
              0.48951342105263157`, 0.2667387368421053}}, {{
              0.4602828421052628, 0.5801780526315787, 
              0.24655178947368417`}}, {{0.6743836315789473, 
              0.6977730526315788, 0.2746017894736842}}, {{0.8335094210526315, 
              0.7551613684210526, 0.3108594736842105}}, {{0.8539025789473684, 
              0.6528104210526317, 0.3182613157894737}}, {{0.777886157894737, 
              0.4010961052631584, 0.2729335263157896}}, {{0.72987, 0.239399, 
              0.230961}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -90.}, {
                    Rational[15, 2], -90.}}, {{-7.5, -90.}, {7.5, -90.}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.5}, {
                    Rational[15, 2], -67.5}}, {{-7.5, -67.5}, {
                  7.5, -67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -45.00000000000003}, {
                    Rational[
                    15, 2], -45.00000000000003}}, {{-7.5, \
-45.00000000000003}, {7.5, -45.00000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -22.5}, {
                    Rational[15, 2], -22.5}}, {{-7.5, -22.5}, {
                  7.5, -22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 22.5}, {
                    Rational[15, 2], 22.5}}, {{-7.5, 22.5}, {7.5, 22.5}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.}, {
                    Rational[15, 2], 45.}}, {{-7.5, 45.}, {7.5, 45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 67.50000000000006}, {
                    Rational[15, 2], 67.50000000000006}}, {{-7.5, 
                  67.50000000000006}, {7.5, 67.50000000000006}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 90.}, {
                    Rational[15, 2], 90.}}, {{-7.5, 90.}, {7.5, 90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                  112.5}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -90.}, 
                    Offset[{4., 0}, {7.5, -90.}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{4., 0}, {7.5, -45.}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 45.}, 
                    Offset[{4., 0}, {7.5, 45.}]}, {{7.5, 67.50000000000004}, 
                    Offset[{4., 0}, {7.5, 67.50000000000004}]}, {{7.5, 90.}, 
                    Offset[{4., 0}, {7.5, 90.}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["14", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["22", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["24", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["26", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["28", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.50000000000004}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontWeight -> Bold]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontWeight -> Bold]}, StripOnInput -> False], 
                  "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks", 
                StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontWeight -> Bold, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"DarkRainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               
               RowBox[{"{", 
                 RowBox[{"13.`", ",", "32.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"16.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"18.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"22.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"24.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"26.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"28.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"30.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"32.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "Bold"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.686156499295423*^9, {3.686165944773314*^9, 3.6861659742464542`*^9}, 
   3.686167009904274*^9, 3.686167237005309*^9, 3.686167276358603*^9, 
   3.686168143804056*^9, {3.686169763539639*^9, 3.686169784522977*^9}, 
   3.686169836252277*^9, 3.686223998093028*^9, 3.6862269950873938`*^9, {
   3.686229439595685*^9, 3.686229514904685*^9}, 3.686229574803673*^9, 
   3.6862306413206367`*^9, 3.686238497407673*^9, 3.686241059542858*^9, 
   3.6862411524501057`*^9, {3.686241190739828*^9, 3.6862412361844883`*^9}, 
   3.686241320476736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chip", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
    RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "&"}], ",", 
       RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "}"}]}]}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "a", " ", "function", " ", "to", " ", "create", 
    " ", "an", " ", "interpolation", " ", "of", " ", "dataset"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.686083020538989*^9, 3.686083084061181*^9}, 
   3.686083867538556*^9, {3.686084021143159*^9, 3.686084038706897*^9}, 
   3.686084249424872*^9, {3.686224003602631*^9, 3.686224018489456*^9}, {
   3.686224057690517*^9, 3.68622405979597*^9}, {3.6862409029819193`*^9, 
   3.686240918677391*^9}, {3.686241361589995*^9, 3.686241362349784*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Interpolation","indp",
   "\"There are duplicated abscissa points in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"22\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{\\\"23\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"22\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"24\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"24\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"20\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"25\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"25\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"10\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"25\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"10\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"22\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"19\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"10\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"24\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"9\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"25\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"19\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"18\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"21\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"18\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"22\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"10\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"24\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"10\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"26\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"10\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"24\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"24\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"18\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"12\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"18\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"17\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"19\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"12\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"19\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"25\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"27\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"20\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"12\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"22\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"12\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"23\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"11\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"25\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"11\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"23\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"12\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"4346\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\).\"",2,151,20,16700126445037340770,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.686241249761532*^9, 3.686241330539051*^9, 
  3.686241363106606*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"22", ",", 
               RowBox[{"-", "9"}], ",", "27"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21", ",", 
               RowBox[{"-", "9"}], ",", "28"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"23", ",", 
               RowBox[{"-", "9"}], ",", "26"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"20", ",", 
               RowBox[{"-", "9"}], ",", "28"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22", ",", 
               RowBox[{"-", "9"}], ",", "26"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"24", ",", 
               RowBox[{"-", "9"}], ",", "24"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21", ",", 
               RowBox[{"-", "9"}], ",", "27"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"24", ",", 
               RowBox[{"-", "9"}], ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"20", ",", 
               RowBox[{"-", "9"}], ",", "29"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"25", ",", 
               RowBox[{"-", "9"}], ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"25", ",", 
               RowBox[{"-", "9"}], ",", "23"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21", ",", 
               RowBox[{"-", "10"}], ",", "28"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"23", ",", 
               RowBox[{"-", "9"}], ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"25", ",", 
               RowBox[{"-", "9"}], ",", "24"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"23", ",", 
               RowBox[{"-", "10"}], ",", "26"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"20", ",", 
               RowBox[{"-", "10"}], ",", "29"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22", ",", 
               RowBox[{"-", "10"}], ",", "27"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"19", ",", 
               RowBox[{"-", "10"}], ",", "29"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"24", ",", 
               RowBox[{"-", "10"}], ",", "25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"26", ",", 
               RowBox[{"-", "9"}], ",", "23"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"25", ",", 
               RowBox[{"-", "10"}], ",", "24"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"19", ",", 
               RowBox[{"-", "11"}], ",", "30"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"18", ",", 
               RowBox[{"-", "11"}], ",", "30"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21", ",", 
               RowBox[{"-", "11"}], ",", "28"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"18", ",", 
               RowBox[{"-", "11"}], ",", "31"}], "}"}], ",", 
             TemplateBox[{"4346"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", 
               RowBox[{"-", "51"}], ",", "19"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "52"}], ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"27", ",", 
               RowBox[{"-", "51"}], ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"33", ",", 
               RowBox[{"-", "52"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"8", ",", 
               RowBox[{"-", "52"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "53"}], ",", "19"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9", ",", 
               RowBox[{"-", "53"}], ",", "19"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"29", ",", 
               RowBox[{"-", "53"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "53"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", 
               RowBox[{"-", "53"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", 
               RowBox[{"-", "56"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"33", ",", 
               RowBox[{"-", "56"}], ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11", ",", 
               RowBox[{"-", "57"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"32", ",", 
               RowBox[{"-", "57"}], ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9", ",", 
               RowBox[{"-", "57"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "58"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"14", ",", 
               RowBox[{"-", "58"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", 
               RowBox[{"-", "58"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"26", ",", 
               RowBox[{"-", "59"}], ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16", ",", 
               RowBox[{"-", "60"}], ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11", ",", 
               RowBox[{"-", "60"}], ",", "18"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"15", ",", 
               RowBox[{"-", "60"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"15", ",", 
               RowBox[{"-", "61"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"14", ",", 
               RowBox[{"-", "61"}], ",", "17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", 
               RowBox[{"-", "63"}], ",", "17"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{
            RowBox[{"\<\"Ext\"\>", "\[Ellipsis]", "\<\"dler\"\>"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )]}]}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 16700126445037340770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 16700126445037340770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 16700126445037340770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[151]]], "Output",
 CellChangeTimes->{{3.686083056172818*^9, 3.686083084965406*^9}, 
   3.6860838693852386`*^9, 3.6860840264509687`*^9, 3.6860842518108053`*^9, 
   3.686084341935432*^9, 3.6861685182276917`*^9, 3.6862240628701963`*^9, 
   3.686238502653838*^9, 3.686240919661314*^9, 3.686241249851622*^9, 
   3.686241330560485*^9, 3.686241363132806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Chip", "[", 
  RowBox[{"10", ",", 
   RowBox[{"-", "50"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chip", "[", 
  RowBox[{"5", ",", 
   RowBox[{"-", "40"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.686168514258113*^9, 3.6861685778958387`*^9}, {
  3.686240370657547*^9, 3.686240376553988*^9}, {3.686240843642058*^9, 
  3.686240847166151*^9}, {3.686240959935299*^9, 3.6862409734913883`*^9}}],

Cell[BoxData["19.134902925042557`"], "Output",
 CellChangeTimes->{{3.686168564576975*^9, 3.686168574722571*^9}, 
   3.686238505471053*^9, {3.6862403693892736`*^9, 3.6862403770687838`*^9}, 
   3.686240847785337*^9, 3.6862409233943663`*^9, {3.686240960565707*^9, 
   3.6862409740814466`*^9}}],

Cell[BoxData["20.93822763296071`"], "Output",
 CellChangeTimes->{{3.686168564576975*^9, 3.686168574722571*^9}, 
   3.686238505471053*^9, {3.6862403693892736`*^9, 3.6862403770687838`*^9}, 
   3.686240847785337*^9, 3.6862409233943663`*^9, {3.686240960565707*^9, 
   3.6862409740923367`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataDim", "[", "1", "]"}], "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"dataDim", "[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataDim", "[", "2", "]"}], "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"dataDim", "[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"dataDim", "[", "1", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"dataDim", "[", "2", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", "0"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"dataDim", "[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"dataDim", "[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "//", 
    "MatrixForm"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6862299242429953`*^9, 3.686229928847674*^9}, {
   3.68622997989397*^9, 3.686229994186041*^9}, {3.686230037413774*^9, 
   3.68623004608281*^9}, 3.6862301159935703`*^9, {3.686230615652158*^9, 
   3.686230616692774*^9}, 3.686230673642997*^9, {3.686230738378401*^9, 
   3.6862308992729397`*^9}, {3.6862310049863777`*^9, 3.686231007446192*^9}, {
   3.686236930001534*^9, 3.686236953382186*^9}, {3.686237016093137*^9, 
   3.686237041051409*^9}, {3.6862370794112377`*^9, 3.686237132160201*^9}, {
   3.6862371747993097`*^9, 3.6862372380784903`*^9}, {3.686237788200287*^9, 
   3.6862378105688667`*^9}, {3.686238416304779*^9, 3.68623843095247*^9}, {
   3.686238521954309*^9, 3.686238524949477*^9}, {3.6862386221731377`*^9, 
   3.686238756572649*^9}, {3.6862388004001617`*^9, 3.686238824202137*^9}, {
   3.68623886560802*^9, 3.686238900702024*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], "\[NoBreak]", 
           ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 90, 
             16700126445037340770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 90, 
             16700126445037340770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 90, 
             16700126445037340770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[90]]], "Output",
 CellChangeTimes->{
  3.686238758267076*^9, {3.686238802486032*^9, 3.686238826229147*^9}, {
   3.686238883365576*^9, 3.6862389017056847`*^9}, 3.686241018633996*^9}]
}, Open  ]]
},
WindowSize->{1465, 1140},
WindowMargins->{{4, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 987, 19, 96, "Input"],
Cell[1412, 36, 416, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1865, 47, 3690, 88, 138, "Input"],
Cell[5558, 137, 1044, 15, 32, "Output"],
Cell[6605, 154, 1310, 26, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7952, 185, 1134, 23, 54, "Input"],
Cell[9089, 210, 81570, 1648, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90696, 1863, 2879, 50, 159, "Input"],
Cell[93578, 1915, 79212, 1348, 378, "Output"],
Cell[172793, 3265, 81132, 1569, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253962, 4839, 925, 20, 32, "Input"],
Cell[254890, 4861, 5992, 83, 59, "Message"],
Cell[260885, 4946, 15531, 382, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276453, 5333, 418, 9, 54, "Input"],
Cell[276874, 5344, 290, 4, 32, "Output"],
Cell[277167, 5350, 289, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277493, 5359, 2300, 51, 201, "Input"],
Cell[279796, 5412, 8309, 211, 106, "Output"]
}, Open  ]]
}
]
*)

